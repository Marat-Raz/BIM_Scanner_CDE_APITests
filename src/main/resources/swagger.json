{
  "openapi": "3.0.1",
  "info": {
    "title": "CDE API",
    "version": "v1.0"
  },
  "paths": {
    "/api/abp/api-definition": {
      "get": {
        "tags": [
          "AbpApiDefinition"
        ],
        "summary": "[ABP] Get application api definition.",
        "description": "Returns json object containing all endpoints metadata. Used by ABP dynamic proxy\r\ngenerator libs.",
        "parameters": [
          {
            "name": "IncludeTypes",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpApplicationApiDescriptionModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpApplicationApiDescriptionModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpApplicationApiDescriptionModel"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/abp/application-configuration": {
      "get": {
        "tags": [
          "AbpApplicationConfiguration"
        ],
        "summary": "[ABP] Get general application configuration",
        "description": "Returns application configuration, including current user, localization resources,\r\navailable features and settings.",
        "parameters": [
          {
            "name": "IncludeLocalizationResources",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpApplicationConfigurationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpApplicationConfigurationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpApplicationConfigurationDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/abp/application-localization": {
      "get": {
        "tags": [
          "AbpApplicationLocalization"
        ],
        "summary": "[ABP] Get localization resources for specific culture",
        "parameters": [
          {
            "name": "CultureName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OnlyDynamics",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpApplicationLocalizationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpApplicationLocalizationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpApplicationLocalizationDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/abp/multi-tenancy/tenants/by-name/{name}": {
      "get": {
        "tags": [
          "AbpTenant"
        ],
        "summary": "[ABP] Get tenant by name",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpFindTenantResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpFindTenantResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpFindTenantResultDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/abp/multi-tenancy/tenants/by-id/{id}": {
      "get": {
        "tags": [
          "AbpTenant"
        ],
        "summary": "[ABP] Get tenant by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpFindTenantResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpFindTenantResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpFindTenantResultDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/account/register": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "[ABP] Register new user",
        "description": "Endpoint is called when user is registering in system by himself. After registration\r\nhe gets default system role.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AbpRegisterDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AbpRegisterDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AbpRegisterDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpIdentityUserDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpIdentityUserDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpIdentityUserDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/account/send-password-reset-code": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "[ABP] Send password reset code to user email.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AbpSendPasswordResetCodeDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AbpSendPasswordResetCodeDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AbpSendPasswordResetCodeDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/account/verify-password-reset-token": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "[ABP] Verify password reset token.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AbpVerifyPasswordResetTokenInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AbpVerifyPasswordResetTokenInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AbpVerifyPasswordResetTokenInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/account/reset-password": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "[ABP] Set new password using password reset token.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AbpResetPasswordDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AbpResetPasswordDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AbpResetPasswordDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/setting-management/account": {
      "get": {
        "tags": [
          "AccountSettings"
        ],
        "summary": "Get general accounts management settings.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeAccountSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeAccountSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeAccountSettingsDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "AccountSettings"
        ],
        "summary": "Update general accounts management settings.",
        "requestBody": {
          "description": "New settings.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeUpdateAccountSettingsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeUpdateAccountSettingsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CdeUpdateAccountSettingsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/projects/{projectId}/custom-fields": {
      "get": {
        "tags": [
          "CustomFields"
        ],
        "summary": "Get custom fields configured in a project.",
        "description": "## Usage\r\nList all the custom fields configured in a specified project.\r\nCustom fields may be filtered by archived status. By default returns not archived fields.\r\n            \r\n### Authorization\r\nRequires authenticated user.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "archive",
            "in": "query",
            "description": "Filter by archive status. Valid values are `all`, `archived` and `not-archived`.",
            "schema": {
              "$ref": "#/components/schemas/CdeArchiveState"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CdeCustomFieldDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CdeCustomFieldDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CdeCustomFieldDto"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CustomFields"
        ],
        "summary": "Add a new custom field to a project.",
        "description": "## Usage\r\nAdd a new custom field to a project.\r\n            \r\n### Authorization\r\nRequires authenticated user.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Data to create a custom field.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeCreateCustomFieldDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeCreateCustomFieldDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CdeCreateCustomFieldDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeCustomFieldDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeCustomFieldDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeCustomFieldDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/projects/{projectId}/custom-fields/{customFieldId}": {
      "get": {
        "tags": [
          "CustomFields"
        ],
        "summary": "Get custom field by id.",
        "description": "## Usage\r\nGet custom field by id.\r\n            \r\n### Authorization\r\nRequires authenticated user.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "customFieldId",
            "in": "path",
            "description": "Custom field id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeCustomFieldDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeCustomFieldDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeCustomFieldDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "CustomFields"
        ],
        "summary": "Edit custom field.",
        "description": "## Usage\r\nEdit custom field parameters.\r\nCustom field can not be deleted, only archived. Archived custom field may be restored.\r\n            \r\n### Authorization\r\nRequires authenticated user.\r\n            \r\n### Error codes\r\n- `CDE:NameShouldBeUnique` - when creating or changing enumeration item code.\r\n- `CDE:CustomFieldTypeMismatch` - when trying to change enumeration items for custom field of type other than `enumeration`.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "customFieldId",
            "in": "path",
            "description": "Custom field id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Data to update a custom field.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeUpdateCustomFieldDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeUpdateCustomFieldDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CdeUpdateCustomFieldDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeCustomFieldDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeCustomFieldDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeCustomFieldDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/projects/{projectId}/custom-fields/{customFieldId}/enumeration-items": {
      "get": {
        "tags": [
          "CustomFields"
        ],
        "summary": "Get enumeration custom field items.",
        "description": "## Usage\r\nGet enumeration custom field items.\r\n            \r\n### Authorization\r\nRequires authenticated user.\r\n            \r\n### Error codes\r\n- `CDE:CustomFieldTypeMismatch` - when trying to get enumeration items for custom field of type other than `enumeration`.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "customFieldId",
            "in": "path",
            "description": "Custom field id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CdeEnumerationCustomFieldItemDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CdeEnumerationCustomFieldItemDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CdeEnumerationCustomFieldItemDto"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/account/dynamic-claims/refresh": {
      "post": {
        "tags": [
          "DynamicClaims"
        ],
        "summary": "[ABP] Refresh dynamic user claims.",
        "description": "See https://abp.io/docs/latest/framework/fundamentals/dynamic-claims.",
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/setting-management/emailing": {
      "get": {
        "tags": [
          "EmailSettings"
        ],
        "summary": "[ABP] Get email sender settings.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpEmailSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpEmailSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpEmailSettingsDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "EmailSettings"
        ],
        "summary": "[ABP] Update email sender settings.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AbpUpdateEmailSettingsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AbpUpdateEmailSettingsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AbpUpdateEmailSettingsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/setting-management/emailing/send-test-email": {
      "post": {
        "tags": [
          "EmailSettings"
        ],
        "summary": "[ABP] Send test email using current sender settings.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AbpSendTestEmailInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AbpSendTestEmailInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AbpSendTestEmailInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/account/external-provider": {
      "get": {
        "tags": [
          "ExternalLoginProviderSettings"
        ],
        "summary": "Get all configured external identity providers.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CdeExternalLoginProviderSettingsDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CdeExternalLoginProviderSettingsDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CdeExternalLoginProviderSettingsDto"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ExternalLoginProviderSettings"
        ],
        "summary": "Add new identity provider.",
        "requestBody": {
          "description": "External identity provider parameters.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeAddOrUpdateExternalLoginProviderSettingsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeAddOrUpdateExternalLoginProviderSettingsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CdeAddOrUpdateExternalLoginProviderSettingsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeExternalLoginProviderSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeExternalLoginProviderSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeExternalLoginProviderSettingsDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/account/external-provider/{id}": {
      "get": {
        "tags": [
          "ExternalLoginProviderSettings"
        ],
        "summary": "Get identity provider settings by provider name.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identity provider ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeExternalLoginProviderSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeExternalLoginProviderSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeExternalLoginProviderSettingsDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ExternalLoginProviderSettings"
        ],
        "summary": "Update identity provider configuration.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identity provider ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "External identity provider parameters.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeAddOrUpdateExternalLoginProviderSettingsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeAddOrUpdateExternalLoginProviderSettingsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CdeAddOrUpdateExternalLoginProviderSettingsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeExternalLoginProviderSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeExternalLoginProviderSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeExternalLoginProviderSettingsDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ExternalLoginProviderSettings"
        ],
        "summary": "Remove identity provider.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identity provider ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/feature-management/features": {
      "get": {
        "tags": [
          "Features"
        ],
        "summary": "[ABP] Get features state.",
        "description": "See https://abp.io/docs/latest/framework/infrastructure/features.",
        "parameters": [
          {
            "name": "providerName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "providerKey",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpGetFeatureListResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpGetFeatureListResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpGetFeatureListResultDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Features"
        ],
        "summary": "[ABP] Set feature value.",
        "description": "See https://abp.io/docs/latest/framework/infrastructure/features.",
        "parameters": [
          {
            "name": "providerName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "providerKey",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AbpUpdateFeaturesDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AbpUpdateFeaturesDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AbpUpdateFeaturesDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Features"
        ],
        "summary": "[ABP] Reset feature value to default.",
        "description": "See https://abp.io/docs/latest/framework/infrastructure/features.",
        "parameters": [
          {
            "name": "providerName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "providerKey",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/projects/{projectId}/labels": {
      "post": {
        "tags": [
          "Labels"
        ],
        "summary": "Creates a new label.",
        "description": "## Usage\r\nCreates a new label.\r\n            \r\n### Authorization\r\nRequired authenticated user.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project Id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The BimScanner.CDE.Projects.Labels.CreateLabelDto containing details of the label to create.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeCreateLabelDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeCreateLabelDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CdeCreateLabelDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeLabelDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeLabelDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeLabelDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Labels"
        ],
        "summary": "Get labels by project ID.",
        "description": "## Usage\r\nGet labels by project ID.\r\n            \r\n### Authorization\r\nRequired authenticated user.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "includeDeleted",
            "in": "query",
            "description": "A flag indicating whether to include soft-deleted labels in the result.\r\nIf `true`, soft-deleted labels will be included; otherwise, they will be excluded.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CdeLabelDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CdeLabelDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CdeLabelDto"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/projects/{projectId}/labels/{labelId}": {
      "get": {
        "tags": [
          "Labels"
        ],
        "summary": "Get label by project ID and label ID.",
        "description": "## Usage\r\nGet label by project ID and label ID.\r\n            \r\n### Authorization\r\nRequired authenticated user.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "labelId",
            "in": "path",
            "description": "Label ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeLabelDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeLabelDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeLabelDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Labels"
        ],
        "summary": "Updates and existing label.",
        "description": "## Usage\r\nUpdates and existing label.\r\n            \r\n### Authorization\r\nRequired authenticated user.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "labelId",
            "in": "path",
            "description": "Label ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The BimScanner.CDE.Projects.Labels.CreateLabelDtoContaining updated details of the label.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeUpdateLabelDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeUpdateLabelDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CdeUpdateLabelDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeLabelDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeLabelDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeLabelDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Labels"
        ],
        "summary": "Deletes a label.",
        "description": "## Usage\r\nDeletes a label, requires project ID and label ID.\r\n            \r\n### Authorization\r\nRequired authenticated user.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "labelId",
            "in": "path",
            "description": "Label ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/meta/buildinfo": {
      "get": {
        "tags": [
          "Meta"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeBuildInfoDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeBuildInfoDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeBuildInfoDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/meta/buildinfo/semver": {
      "get": {
        "tags": [
          "Meta"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/projects/{projectId}/models/{modelId}/revisions": {
      "get": {
        "tags": [
          "ModelRevisions"
        ],
        "summary": "Get list of model revisions with specified filter.",
        "description": "## Usage\r\nGet list of model revisions with specified filter.\r\n            \r\nEndpoint supports a following subset of OData query options:\r\n- `$filter` - specify items filter using [OData query operators](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part2-url-conventions.html#sec_SystemQueryOptions)\r\n- `$search` - applies filter by text that should be contained in revision comment.\r\n- `$orderBy` - defines items sorting order in format e.g. `$orderBy=name desc,creationDate`.\r\n- `$top` - requests the number of items in the queried collection to be included in the result.\r\n- `$skip` - requests the number of items in the queried collection that are to be skipped and not included in the result.\r\n            \r\nExample query may look like this:\r\n```\r\n\r\nGET /api/projects/3fa85f64-5717-4562-b3fc-2c963f66afa6/models/3a17dd6a-bc6a-9590-1c4a-9629c2930519/?$orderBy=version&$search=something&$skip=10&$top=10\r\n\r\n```\r\n            \r\n### Authorization\r\nUser should be authenticated.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "modelId",
            "in": "path",
            "description": "Model id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Specify items filter using OData query operators",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Endpoint-specific items filter",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderBy",
            "in": "query",
            "description": "Define items sorting order in format e.g. `$orderBy=name desc, creationTime`",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of items to skip from the beginning of requested collection. Used for pagination.",
            "allowReserved": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of items to take from requested collection. Used for pagination.",
            "allowReserved": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeModelRevisionDtoPagedResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeModelRevisionDtoPagedResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeModelRevisionDtoPagedResultDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid query syntax."
          },
          "401": {
            "description": "User is not authenticated."
          },
          "403": {
            "description": "User does not have a permission to read models."
          },
          "500": {
            "description": "Internal error."
          }
        }
      },
      "post": {
        "tags": [
          "ModelRevisions"
        ],
        "summary": "Upload new model file.",
        "description": "## Usage\r\nUploads new model file creating a new model revision of next version.\r\nFile should be in `.ifc` or `.ifczip` format and has a size limit of 1 Gb.\r\n            \r\n## Authorization\r\nUser should be authenticated.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "modelId",
            "in": "path",
            "description": "Model id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string"
                  },
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "comment": {
                  "style": "form"
                },
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeModelRevisionDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeModelRevisionDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeModelRevisionDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid file format."
          },
          "401": {
            "description": "User is not authenticated."
          },
          "403": {
            "description": "User does not have a permission to upload models."
          },
          "500": {
            "description": "Internal error."
          }
        }
      }
    },
    "/api/projects/{projectId}/models/{modelId}/revisions/{version}": {
      "get": {
        "tags": [
          "ModelRevisions"
        ],
        "summary": "Get model revision.",
        "description": "## Usage\r\nReturns model revision by model id and version number.\r\n            \r\n## Authorization\r\nUser should be authenticated.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "modelId",
            "in": "path",
            "description": "Model id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "Model version.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeModelRevisionDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeModelRevisionDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeModelRevisionDto"
                }
              }
            }
          },
          "401": {
            "description": "User is not authenticated."
          },
          "403": {
            "description": "User does not have a permission to read models."
          },
          "404": {
            "description": "Model revision is not found."
          },
          "500": {
            "description": "Internal error."
          }
        }
      },
      "put": {
        "tags": [
          "ModelRevisions"
        ],
        "summary": "Update model revision.",
        "description": "## Usage\r\nAllows to change model revision comment.\r\n            \r\n## Authorization\r\nUser should be authenticated.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "modelId",
            "in": "path",
            "description": "Model id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "Model version.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Data to update model revision.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeUpdateModelRevisionDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeUpdateModelRevisionDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CdeUpdateModelRevisionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeModelRevisionDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeModelRevisionDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeModelRevisionDto"
                }
              }
            }
          },
          "401": {
            "description": "User is not authenticated."
          },
          "403": {
            "description": "User does not have a permission to update model revision."
          },
          "404": {
            "description": "Model revision is not found."
          },
          "500": {
            "description": "Internal error."
          }
        }
      }
    },
    "/api/projects/{projectId}/models/{modelId}/revisions/{version}/download": {
      "get": {
        "tags": [
          "ModelRevisions"
        ],
        "summary": "Download model revision file.",
        "description": "## Usage\r\nAllows to download model revision file in specified format.\r\nFile format is defined by `Accept` header.\r\nAllowed formats are:\r\n- `application/ifc` - download original IFC model file\r\n- `application/gltf-binary` - download 3D geometry model generated by BimScanner IFC converter\r\n- `bimscanner/ifc-xml` - download model metadata file generated by BimScanner IFC converter\r\n- `application/xkt` - download model in Xeokit .xkt v11 format\r\n            \r\n## Authorization\r\nUser should be authenticated.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "modelId",
            "in": "path",
            "description": "Model id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "Model version.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/ifc": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/gltf-binary": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "bimscanner/ifc-xml": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/xkt": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "User is not authenticated."
          },
          "403": {
            "description": "User does not have access to specified file."
          },
          "404": {
            "description": "File is not found."
          },
          "500": {
            "description": "Internal error."
          }
        }
      }
    },
    "/api/projects/{projectId}/models/{modelId}/revisions/{version}/status": {
      "get": {
        "tags": [
          "ModelRevisions"
        ],
        "summary": "Get status of model conversion job.",
        "description": "## Usage\r\nReturns status of specified model conversion job.\r\n            \r\n## Authorization\r\nUser should be authenticated.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "modelId",
            "in": "path",
            "description": "Model id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "Model version.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeModelConversionStatusDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeModelConversionStatusDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeModelConversionStatusDto"
                }
              }
            }
          },
          "401": {
            "description": "User is not authenticated."
          },
          "403": {
            "description": "User does not have a permission to read models."
          },
          "404": {
            "description": "Model version is not found."
          },
          "500": {
            "description": "Internal error."
          }
        }
      }
    },
    "/api/projects/{projectId}/models": {
      "get": {
        "tags": [
          "Models"
        ],
        "summary": "Get list of models with specified filter.",
        "description": "## Usage\r\nGet list of models with specified filter.\r\n            \r\nEndpoint supports a following subset of OData query options:\r\n- `$filter` - specify items filter using [OData query operators](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part2-url-conventions.html#sec_SystemQueryOptions)\r\n- `$search` - applies case-insensitive filter by text that should be contained in model name.\r\n- `$orderBy` - defines items sorting order in format e.g. `$orderBy=name desc,creationDate`.\r\n- `$top` - requests the number of items in the queried collection to be included in the result.\r\n- `$skip` - requests the number of items in the queried collection that are to be skipped and not included in the result.\r\n            \r\nExample query may look like this:\r\n```\r\n\r\nGET /api/projects/3fa85f64-5717-4562-b3fc-2c963f66afa6/models?$orderBy=name&$search=something&$skip=10&$top=10\r\n\r\n```\r\n            \r\n### Authorization\r\nUser should be authenticated.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Specify items filter using OData query operators",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Endpoint-specific items filter",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderBy",
            "in": "query",
            "description": "Define items sorting order in format e.g. `$orderBy=name desc, creationTime`",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of items to skip from the beginning of requested collection. Used for pagination.",
            "allowReserved": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of items to take from requested collection. Used for pagination.",
            "allowReserved": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeModelDtoPagedResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeModelDtoPagedResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeModelDtoPagedResultDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid query syntax."
          },
          "401": {
            "description": "User is not authenticated."
          },
          "403": {
            "description": "User does not have a permission to read models."
          },
          "500": {
            "description": "Internal error."
          }
        }
      },
      "post": {
        "tags": [
          "Models"
        ],
        "summary": "Create new model.",
        "description": "## Usage\r\nCreates new model. Model name should be unique on project level.\r\n            \r\n## Authorization\r\nRequires authenticated user.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Data to create model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeCreateOrUpdateModelDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeCreateOrUpdateModelDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CdeCreateOrUpdateModelDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeModelDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeModelDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeModelDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/projects/{projectId}/models/{modelId}": {
      "get": {
        "tags": [
          "Models"
        ],
        "summary": "Get model info by id.",
        "description": "## Usage\r\nReturns model info by model id.\r\n            \r\n## Authorization\r\nRequires authenticated user.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "modelId",
            "in": "path",
            "description": "Model id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeModelDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeModelDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeModelDto"
                }
              }
            }
          },
          "401": {
            "description": "User is not authenticated."
          },
          "403": {
            "description": "User does not have an access to the model."
          },
          "404": {
            "description": "Model is not found."
          },
          "500": {
            "description": "Internal error."
          }
        }
      },
      "put": {
        "tags": [
          "Models"
        ],
        "summary": "Update model info.",
        "description": "## Usage\r\nAllows to rename model. Model name should be unique on project level.\r\n            \r\n## Authorization\r\nRequires authenticated user.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "modelId",
            "in": "path",
            "description": "Model id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Data to update model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeCreateOrUpdateModelDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeCreateOrUpdateModelDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CdeCreateOrUpdateModelDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeModelDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeModelDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeModelDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Models"
        ],
        "summary": "Delete model.",
        "description": "## Usage\r\nDeletes model.\r\n            \r\n## Authorization\r\nRequires authenticated user.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "modelId",
            "in": "path",
            "description": "Model id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/notifications": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "summary": "Get latest notifications for current user.",
        "description": "## Usage\r\nReturns latest notifications for current user in order from newest to oldest.\r\nIf `isRead` is specified, notifications are filtered by the specified value of `isRead` flag.\r\n            \r\n### Authorization\r\nRequires authenticated user.",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "description": "Number of items to skip.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "top",
            "in": "query",
            "description": "Number of items to take.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "isRead",
            "in": "query",
            "description": "If set, filters notifications by BimScanner.CDE.Notifications.NotificationDto.IsRead flag.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeNotificationDtoPagedResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeNotificationDtoPagedResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeNotificationDtoPagedResultDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/notifications/count": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "summary": "Get number of notifications for current user.",
        "description": "## Usage\r\nReturns number of notifications for current user.\r\nIf `isRead` is specified, only notifications with specified value of `isRead` flag are counted.\r\n            \r\n### Authorization\r\nRequires authenticated user.",
        "parameters": [
          {
            "name": "isRead",
            "in": "query",
            "description": "If set, filters notifications by BimScanner.CDE.Notifications.NotificationDto.IsRead flag.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/notifications/{notificationId}": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "summary": "Get notification.",
        "description": "## Usage\r\nGets notification by its ID.\r\n            \r\n### Authorization\r\nRequires authenticated user.",
        "parameters": [
          {
            "name": "notificationId",
            "in": "path",
            "description": "ID of a notification.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeNotificationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeNotificationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeNotificationDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Notifications"
        ],
        "summary": "Marks the notification as read.",
        "description": "## Usage\r\nMarks the notification as read.\r\n            \r\n### Authorization\r\nRequires authenticated user.",
        "parameters": [
          {
            "name": "notificationId",
            "in": "path",
            "description": "Notification ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeNotificationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeNotificationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeNotificationDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/permission-management/permissions": {
      "get": {
        "tags": [
          "Permissions"
        ],
        "summary": "[ABP] Get user permissions.",
        "description": "## Usage\r\nEndpoint returns an array of permission groups and permissions with their statuses.\r\nEvery permission has a unique `name` that is used for its identification.\r\nPermission may be granted to a user by following means:\r\n- User may be in a role that has been granted the permission;\r\n- The permission has been granted to the specific user manually.\r\n\r\nThe endpoint allows to get permissions defined with both methods.\r\n\r\nTo get permissions defined by a role use:\r\n- `providerName` = `R`\r\n- `providerKey` = role `name` (e.g. `default_user`)\r\n\r\nTo get permissions defined by specific user use:\r\n- `providerName` = `U`\r\n- `providerKey` = user `id` (e.g. `3a178060-6ee4-8d90-cf59-d502a1a4228f`)\r\n\r\n### Authorization\r\nUser should be authenticated.",
        "parameters": [
          {
            "name": "providerName",
            "in": "query",
            "description": "Permissions provider type.\r\nSupported provider types:\r\n- `U` - get permissions granted by user\r\n- `R` - get permissions granted by role",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "providerKey",
            "in": "query",
            "description": "Entity key specific to permissions provider type:\r\n- For user provider (`providerName` = `U`) - key is `id` of the user.\r\n- For role provider (`providerName` = `R`) - key is `name` of the role.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpGetPermissionListResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpGetPermissionListResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpGetPermissionListResultDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Permissions"
        ],
        "summary": "[ABP] Set user permission value.",
        "description": "## Usage\r\nSet permission value for specific user or role.\r\n\r\nEvery permission has a unique `name` that is used for its identification.\r\nPermission may be granted to a user by following means:\r\n- User may be in a role that has been granted the permission;\r\n- The permission has been granted to the specific user manually.\r\n\r\nThe endpoint allows to set specific permission defined with both methods.\r\n\r\nTo set permissions for a role use:\r\n- `providerName` = `R`\r\n- `providerKey` = role `name` (e.g. `default_user`)\r\n\r\nTo set permission for specific user use:\r\n- `providerName` = `U`\r\n- `providerKey` = user `id` (e.g. `3a178060-6ee4-8d90-cf59-d502a1a4228f`)\r\n\r\n### Authorization\r\nUser should have following permissions:\r\n- To set permissions for user: `AbpIdentity.Users.ManagePermissions`\r\n- To set permissions for role: `AbpIdentity.Roles.ManagePermissions`",
        "parameters": [
          {
            "name": "providerName",
            "in": "query",
            "description": "Permissions provider type.\r\nSupported provider types:\r\n- `U` - set permission value for specific user\r\n- `R` - set permission value for role",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "providerKey",
            "in": "query",
            "description": "Entity key specific to permissions provider type:\r\n- For user provider (`providerName` = `U`) - key is `id` of the user.\r\n- For role provider (`providerName` = `R`) - key is `name` of the role.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AbpUpdatePermissionsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AbpUpdatePermissionsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AbpUpdatePermissionsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/account/my-profile": {
      "get": {
        "tags": [
          "Profile"
        ],
        "summary": "[ABP] Get current user profile info.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpProfileDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpProfileDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpProfileDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Profile"
        ],
        "summary": "[ABP] Update current user profile info.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AbpUpdateProfileDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AbpUpdateProfileDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AbpUpdateProfileDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpProfileDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpProfileDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpProfileDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/account/my-profile/change-password": {
      "post": {
        "tags": [
          "Profile"
        ],
        "summary": "[ABP] Change current user password.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AbpChangePasswordInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AbpChangePasswordInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AbpChangePasswordInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/projects/{projectId}/members": {
      "get": {
        "tags": [
          "ProjectMembers"
        ],
        "summary": "Get members of specified project.",
        "description": "## Usage\r\nGet users that are members of specified project.\r\n            \r\nEndpoint supports a following subset of OData query options:\r\n- `$filter` - specify items filter using [OData query operators](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part2-url-conventions.html#sec_SystemQueryOptions)\r\n- `$search` - applies case-insensitive filter by text that should be contained in user name or email.\r\n- `$orderBy` - defines items sorting order in format e.g. `$orderBy=name desc,creationDate`.\r\n- `$top` - requests the number of items in the queried collection to be included in the result.\r\n- `$skip` - requests the number of items in the queried collection that are to be skipped and not included in the result.\r\n            \r\n### Authorization\r\nUser should have permission to read project members.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Specify items filter using OData query operators",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Endpoint-specific items filter",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderBy",
            "in": "query",
            "description": "Define items sorting order in format e.g. `$orderBy=name desc, creationTime`",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of items to skip from the beginning of requested collection. Used for pagination.",
            "allowReserved": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of items to take from requested collection. Used for pagination.",
            "allowReserved": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeProjectMemberDtoPagedResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeProjectMemberDtoPagedResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeProjectMemberDtoPagedResultDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ProjectMembers"
        ],
        "summary": "Add user to project members. Adding an existing member is an error.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Data to create new project member.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeAddProjectMemberDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeAddProjectMemberDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CdeAddProjectMemberDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeProjectMemberDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeProjectMemberDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeProjectMemberDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/projects/{projectId}/members/{userId}": {
      "get": {
        "tags": [
          "ProjectMembers"
        ],
        "summary": "Get project member by ID.",
        "description": "## Usage\r\nReturns project member information by user ID.\r\n            \r\n### Authorization\r\nUser should have permission to read project members.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "User ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeProjectMemberDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeProjectMemberDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeProjectMemberDto"
                }
              }
            }
          },
          "401": {
            "description": "User is not authenticated.",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "User does not have necessary permissions.",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Project member is not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal error.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProjectMembers"
        ],
        "summary": "Update project member.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "User id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Data to update project member.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeUpdateProjectMemberDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeUpdateProjectMemberDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CdeUpdateProjectMemberDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeProjectMemberDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeProjectMemberDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeProjectMemberDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProjectMembers"
        ],
        "summary": "Remove user from project members. Removing a user that is not a member is not an error.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "User ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/projects/{projectId}/member-candidates": {
      "get": {
        "tags": [
          "ProjectMembers"
        ],
        "summary": "Get users that are not members of specified project.",
        "description": "## Usage\r\nGet users that are not members of specified project, but may become them.\r\n            \r\nEndpoint supports a following subset of OData query options:\r\n- `$filter` - specify items filter using [OData query operators](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part2-url-conventions.html#sec_SystemQueryOptions)\r\n- `$search` - applies case-insensitive filter by text that should be contained in user name or email.\r\n- `$orderBy` - defines items sorting order in format e.g. `$orderBy=name desc,creationDate`.\r\n- `$top` - requests the number of items in the queried collection to be included in the result.\r\n- `$skip` - requests the number of items in the queried collection that are to be skipped and not included in the result.\r\n            \r\n### Authorization\r\nUser should have permission to read project members.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Specify items filter using OData query operators",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Endpoint-specific items filter",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderBy",
            "in": "query",
            "description": "Define items sorting order in format e.g. `$orderBy=name desc, creationTime`",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of items to skip from the beginning of requested collection. Used for pagination.",
            "allowReserved": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of items to take from requested collection. Used for pagination.",
            "allowReserved": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeUserDtoPagedResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeUserDtoPagedResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeUserDtoPagedResultDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "User is not authenticated.",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "User does not have necessary permissions.",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal error.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Project is not found."
          }
        }
      }
    },
    "/api/projects/{projectId}/roles": {
      "get": {
        "tags": [
          "ProjectRoles"
        ],
        "summary": "Get list of all project roles.",
        "description": "## Usage\r\nReturns a list of all project roles. If search string is specified,\r\nreturns roles which names contains search term (case-insensitive).\r\n            \r\n### Authorization\r\nRequires authenticated user.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Filter by role name.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CdeProjectRoleDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CdeProjectRoleDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CdeProjectRoleDto"
                  }
                }
              }
            }
          },
          "403": {
            "description": "User does not have necessary permissions.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "User is not authenticated.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal error.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ProjectRoles"
        ],
        "summary": "Create project role.",
        "description": "## Usage\r\nCreate new project role.\r\nRole name should be unique.\r\nThere can be only one default role in project. If `IsDefault` flag is set\r\nand another role also has `IsDefault` flag, only updated role would have it.\r\n            \r\n### Authorization\r\nRequires authenticated user.\r\n            \r\n### Error codes\r\n- `CDE:NameShouldBeUnique` - role name should be unique.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Data to create role.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeCreateProjectRoleDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeCreateProjectRoleDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CdeCreateProjectRoleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeProjectRoleDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeProjectRoleDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeProjectRoleDto"
                }
              }
            }
          },
          "403": {
            "description": "User does not have necessary permissions.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "User is not authenticated.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal error.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Request body has invalid data."
          }
        }
      }
    },
    "/api/projects/{projectId}/roles/{roleId}": {
      "get": {
        "tags": [
          "ProjectRoles"
        ],
        "summary": "Get project role.",
        "description": "## Usage\r\nGet project role by id.\r\n            \r\n### Authorization\r\nRequires authenticated user.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "Role id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeProjectRoleDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeProjectRoleDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeProjectRoleDto"
                }
              }
            }
          },
          "403": {
            "description": "User does not have necessary permissions.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "User is not authenticated.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal error.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProjectRoles"
        ],
        "summary": "Update project role.",
        "description": "## Usage\r\nUpdates project role.\r\nRole name should be unique.\r\nThere can be only one default role in project. If `IsDefault` flag is set\r\nand another role also has `IsDefault` flag, only updated role would have it.\r\n            \r\n### Authorization\r\nRequires authenticated user.\r\n            \r\n### Error codes\r\n- `CDE:NameShouldBeUnique` - role name should be unique.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "Role id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Data to update role.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeUpdateProjectRoleDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeUpdateProjectRoleDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CdeUpdateProjectRoleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeProjectRoleDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeProjectRoleDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeProjectRoleDto"
                }
              }
            }
          },
          "403": {
            "description": "User does not have necessary permissions.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "User is not authenticated.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal error.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Request body has invalid data."
          }
        }
      },
      "delete": {
        "tags": [
          "ProjectRoles"
        ],
        "summary": "Delete project role.",
        "description": "## Usage\r\nDeletes selected project role.\r\n            \r\n### Authorization\r\nRequires authenticated user.\r\n### Error codes",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "Role id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success."
          },
          "403": {
            "description": "User does not have necessary permissions.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "User is not authenticated.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal error.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/projects/{projectId}/roles/current-permissions": {
      "get": {
        "tags": [
          "ProjectRoles"
        ],
        "summary": "Get list of project member permissions.",
        "description": "## Usage\r\nReturns a list of all project permissions granted to current user.\r\n            \r\n### Authorization\r\nUser should be a project member.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeMemberPermissionsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeMemberPermissionsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeMemberPermissionsDto"
                }
              }
            }
          },
          "403": {
            "description": "User does not have necessary permissions.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "User is not authenticated.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal error.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/projects/all": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Search in all projects, regardless of membership status.",
        "description": "## Usage\r\nSearch in all projects, regardless of user project membership status.\r\n            \r\nEndpoint supports a following subset of OData query options:\r\n- `$filter` - specify items filter using [OData query operators](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part2-url-conventions.html#sec_SystemQueryOptions)\r\n- `$search` - applies case-insensitive filter by text that should be contained in project name.\r\n- `$orderBy` - defines items sorting order in format e.g. `$orderBy=name desc,creationDate`.\r\n- `$top` - requests the number of items in the queried collection to be included in the result.\r\n- `$skip` - requests the number of items in the queried collection that are to be skipped and not included in the result.\r\n            \r\nExample query may look like this:\r\n```\r\n\r\nGET /api/projects/all?$orderBy=creationTime&$filter=contains(description,'something')&$search=proj&$skip=10&$top=10\r\n\r\n```\r\n            \r\n### Authorization\r\nRequires system permission `CDEProjects.ReadAll`.",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Specify items filter using OData query operators",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Endpoint-specific items filter",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderBy",
            "in": "query",
            "description": "Define items sorting order in format e.g. `$orderBy=name desc, creationTime`",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of items to skip from the beginning of requested collection. Used for pagination.",
            "allowReserved": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of items to take from requested collection. Used for pagination.",
            "allowReserved": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeProjectDtoPagedResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeProjectDtoPagedResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeProjectDtoPagedResultDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid query syntax.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "User is not authenticated.",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "User does not have necessary permissions.",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal error.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/projects": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Search in projects where current user is a member.",
        "description": "## Usage\r\nSearch in projects where current user is a member.\r\n            \r\nEndpoint supports a following subset of OData query options:\r\n- `$filter` - specify items filter using [OData query operators](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part2-url-conventions.html#sec_SystemQueryOptions)\r\n- `$search` - applies case-insensitive filter by text that should be contained in project name.\r\n- `$orderBy` - defines items sorting order in format e.g. `$orderBy=name desc,creationDate`.\r\n- `$top` - requests the number of items in the queried collection to be included in the result.\r\n- `$skip` - requests the number of items in the queried collection that are to be skipped and not included in the result.\r\n            \r\nExample query may look like this:\r\n```\r\n\r\nGET /api/projects?$orderBy=creationTime&$filter=contains(description,'something')&$search=proj&$skip=10&$top=10\r\n\r\n```\r\n            \r\n### Authorization\r\nRequires authenticated user.",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Specify items filter using OData query operators",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Endpoint-specific items filter",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderBy",
            "in": "query",
            "description": "Define items sorting order in format e.g. `$orderBy=name desc, creationTime`",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of items to skip from the beginning of requested collection. Used for pagination.",
            "allowReserved": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of items to take from requested collection. Used for pagination.",
            "allowReserved": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeProjectDtoPagedResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeProjectDtoPagedResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeProjectDtoPagedResultDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid query syntax.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "User is not authenticated.",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "User does not have necessary permissions.",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal error.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "Creates a new project.",
        "description": "## Usage\r\nCreates a new project. A user who created the project becomes its owner.\r\n            \r\n### Authorization\r\nSystem permission `CDEProjects.Create` is required.",
        "requestBody": {
          "description": "The BimScanner.CDE.Projects.CreateProjectDto containing details of the project to create.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeCreateProjectDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeCreateProjectDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CdeCreateProjectDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeProjectDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeProjectDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeProjectDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/projects/{id}": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get project by id.",
        "description": "## Usage\r\nGet project by its ID.\r\n            \r\n### Authorization\r\nUser should be a member of the project OR have system permission `CDEProjects.ReadAll`.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Project ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeProjectDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeProjectDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeProjectDto"
                }
              }
            }
          },
          "401": {
            "description": "User is not authenticated.",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "User is not a member of the project.",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Project is not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal error.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Projects"
        ],
        "summary": "Updates an existing project.",
        "description": "## Usage\r\nUpdates project information. To be able to update responsible separate permission is required.\r\n            \r\n### Authorization\r\n- Requires project permission `Project.Update`.\r\n- Requires project permission `Project.UpdateResponsible` to be able to update responsible.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Project id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The BimScanner.CDE.Projects.UpdateProjectDto containing updated details of the project.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeUpdateProjectDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeUpdateProjectDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CdeUpdateProjectDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeProjectDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeProjectDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeProjectDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Projects"
        ],
        "summary": "Deletes a project by its id.",
        "description": "## Usage\r\nDeletes a whole project.\r\n            \r\n### Authorization\r\nCurrent user should be the project owner.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Project id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/projects/{id}/owner": {
      "put": {
        "tags": [
          "Projects"
        ],
        "summary": "Transfer project ownership to another user.",
        "description": "## Usage\r\nTransfer project ownership to another project member. Selected project member becomes project owner.\r\nThere can be only one project owner. Project owner has admin access to all project resources.\r\n            \r\n### Authorization\r\nCurrent user should be the project owner.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Project id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Data to change project owner.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeChangeProjectOwnerDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeChangeProjectOwnerDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CdeChangeProjectOwnerDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeProjectDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeProjectDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeProjectDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/projects/{projectId}/cover": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get project cover image.",
        "description": "## Usage\r\nGet project cover image. Returns empty array if image is not set.\r\n            \r\n### Authorization\r\nUser should be a project member.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Projects"
        ],
        "summary": "Set project cover image.",
        "description": "## Usage\r\nSets project cover image. Accepts .jpg or .png formats with file size limit of 5 Mb.\r\n            \r\n### Authorization\r\nRequires project permission `Project.Update`.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "coverImage": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "coverImage": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Projects"
        ],
        "summary": "Delete project cover image.",
        "description": "## Usage\r\nDelete project cover image. Executes successfully even if image is not set.\r\n            \r\n### Authorization\r\nRequires project permission `Project.Update`.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/identity/roles/all": {
      "get": {
        "tags": [
          "Role"
        ],
        "summary": "[ABP] Get all system roles.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpIdentityRoleDtoListResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpIdentityRoleDtoListResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpIdentityRoleDtoListResultDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/identity/roles": {
      "get": {
        "tags": [
          "Role"
        ],
        "summary": "[ABP] Get system roles with sorting and paging.",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ExtraProperties",
            "in": "query",
            "schema": {
              "type": "object",
              "additionalProperties": { }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpIdentityRoleDtoPagedResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpIdentityRoleDtoPagedResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpIdentityRoleDtoPagedResultDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Role"
        ],
        "summary": "[ABP] Create new system role.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AbpIdentityRoleCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AbpIdentityRoleCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AbpIdentityRoleCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpIdentityRoleDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpIdentityRoleDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpIdentityRoleDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/identity/roles/{id}": {
      "get": {
        "tags": [
          "Role"
        ],
        "summary": "[ABP] Get system role by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpIdentityRoleDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpIdentityRoleDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpIdentityRoleDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Role"
        ],
        "summary": "[ABP] Update system role.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AbpIdentityRoleUpdateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AbpIdentityRoleUpdateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AbpIdentityRoleUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpIdentityRoleDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpIdentityRoleDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpIdentityRoleDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Role"
        ],
        "summary": "[ABP] Delete system role.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/multi-tenancy/tenants/{id}": {
      "get": {
        "tags": [
          "Tenant"
        ],
        "summary": "[ABP] Get tenant by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpTenantDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpTenantDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpTenantDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Tenant"
        ],
        "summary": "[ABP] Update tenant.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AbpTenantUpdateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AbpTenantUpdateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AbpTenantUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpTenantDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpTenantDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpTenantDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tenant"
        ],
        "summary": "[ABP] Delete tenant.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/multi-tenancy/tenants": {
      "get": {
        "tags": [
          "Tenant"
        ],
        "summary": "[ABP] Get tenants with paging and filtering.",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpTenantDtoPagedResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpTenantDtoPagedResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpTenantDtoPagedResultDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tenant"
        ],
        "summary": "[ABP] Create new tenant.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AbpTenantCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AbpTenantCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AbpTenantCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpTenantDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpTenantDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpTenantDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/multi-tenancy/tenants/{id}/default-connection-string": {
      "get": {
        "tags": [
          "Tenant"
        ],
        "summary": "[ABP] Get database connection string for tenant.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Tenant"
        ],
        "summary": "[ABP] Set database connection string for tenant.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "defaultConnectionString",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tenant"
        ],
        "summary": "[ABP] Reset tenant database connection string to default.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/setting-management/timezone": {
      "get": {
        "tags": [
          "TimeZoneSettings"
        ],
        "summary": "[ABP] Get user time zone setting value.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TimeZoneSettings"
        ],
        "summary": "[ABP] Set user time zone.",
        "parameters": [
          {
            "name": "timezone",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/setting-management/timezone/timezones": {
      "get": {
        "tags": [
          "TimeZoneSettings"
        ],
        "summary": "[ABP] Get available time zones.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AbpNameValue"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AbpNameValue"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AbpNameValue"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/projects/{projectId}/issues/board-groups": {
      "get": {
        "tags": [
          "TopicBoardGroups"
        ],
        "summary": "Get root topic board groups and topic boards.",
        "description": "## Usage\r\nReturns collection of topic board groups and topic boards located on top of hierarchy.\r\n            \r\n### Authorization\r\nRequires authenticated user.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "CDE project Id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/CdeTopicBoardDto"
                      },
                      {
                        "$ref": "#/components/schemas/CdeTopicBoardGroupDto"
                      }
                    ],
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Type discriminator. Possible values:\n- `TopicBoard`\n- `TopicBoardGroup`"
                      }
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/CdeTopicBoardDto"
                      },
                      {
                        "$ref": "#/components/schemas/CdeTopicBoardGroupDto"
                      }
                    ],
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Type discriminator. Possible values:\n- `TopicBoard`\n- `TopicBoardGroup`"
                      }
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/CdeTopicBoardDto"
                      },
                      {
                        "$ref": "#/components/schemas/CdeTopicBoardGroupDto"
                      }
                    ],
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Type discriminator. Possible values:\n- `TopicBoard`\n- `TopicBoardGroup`"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid query syntax.",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "User is not authenticated.",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "User does not have necessary permissions.",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal error.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TopicBoardGroups"
        ],
        "summary": "Create new topic boards group.",
        "description": "## Usage\r\nCreates new topic boards group.\r\n            \r\n### Authorization\r\nRequires authenticated user.\r\n            \r\n### Error codes\r\n- `CDE:TopicBoardsGroupNestingTooDeep`",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project Id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "New group data.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeCreateTopicBoardGroupDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeCreateTopicBoardGroupDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CdeCreateTopicBoardGroupDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicBoardGroupDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicBoardGroupDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicBoardGroupDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/projects/{projectId}/issues/board-groups/flat-list": {
      "get": {
        "tags": [
          "TopicBoardGroups"
        ],
        "summary": "Get flat list of project topic boards and parent groups.",
        "description": "## Usage\r\nReturns collection of topic boards which names match the search string.\r\nFor each matching board all parent groups are also loaded.\r\n            \r\nIf query parameter `searchGroups` is set, matching groups are loaded.\r\nFor every matching group all parent groups and direct children are loaded.\r\n            \r\n### Authorization\r\nRequires authenticated user.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "searchGroups",
            "in": "query",
            "description": "If true, search also in board groups names.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search text.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/CdeTopicBoardDto"
                      },
                      {
                        "$ref": "#/components/schemas/CdeTopicBoardGroupDto"
                      }
                    ],
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Type discriminator. Possible values:\n- `TopicBoard`\n- `TopicBoardGroup`"
                      }
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/CdeTopicBoardDto"
                      },
                      {
                        "$ref": "#/components/schemas/CdeTopicBoardGroupDto"
                      }
                    ],
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Type discriminator. Possible values:\n- `TopicBoard`\n- `TopicBoardGroup`"
                      }
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/CdeTopicBoardDto"
                      },
                      {
                        "$ref": "#/components/schemas/CdeTopicBoardGroupDto"
                      }
                    ],
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Type discriminator. Possible values:\n- `TopicBoard`\n- `TopicBoardGroup`"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid query syntax.",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "User is not authenticated.",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "User does not have necessary permissions.",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal error.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/projects/{projectId}/issues/board-groups/{topicBoardGroupId}": {
      "get": {
        "tags": [
          "TopicBoardGroups"
        ],
        "summary": "Get topic board group.",
        "description": "## Usage\r\nReturns topic boards group by id.\r\n            \r\n### Authorization\r\nRequires authenticated user.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project Id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "topicBoardGroupId",
            "in": "path",
            "description": "Id of the topic board group.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "includeChildren",
            "in": "query",
            "description": "If true, includes children items into response.",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicBoardGroupPopulatedDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicBoardGroupPopulatedDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicBoardGroupPopulatedDto"
                }
              }
            }
          },
          "401": {
            "description": "User is not authenticated.",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "User does not have necessary permissions.",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Entity is not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal error.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/projects/{projectId}/issues/board-groups/{groupId}": {
      "put": {
        "tags": [
          "TopicBoardGroups"
        ],
        "summary": "Update topic board group.",
        "description": "## Usage\r\nUpdates topic boards group.\r\nAllows to move group in hierarchy by changing `parentGroupId` when keeping following restrictions:\r\n- The group can not be moved into itself of any of its children\r\n- Maximum hierarchy depth is 5 groups deep.\r\n            \r\n### Authorization\r\nRequires authenticated user.\r\n            \r\n### Error codes\r\n- `CDE:TopicBoardsGroupNestingTooDeep`\r\n- `CDE:CanNotMoveTopicBoardsGroupIntoItself`\r\n- `CDE:CanNotMoveTopicBoardsGroupIntoChild`",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "groupId",
            "in": "path",
            "description": "Topic board group id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "New group data.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeUpdateTopicBoardGroupDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeUpdateTopicBoardGroupDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CdeUpdateTopicBoardGroupDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicBoardGroupDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicBoardGroupDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicBoardGroupDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TopicBoardGroups"
        ],
        "summary": "Remove topic board group.",
        "description": "## Usage\r\nRemoves topic boards group.\r\nAny contained in group topic boards are moved into hierarchy root.\r\n            \r\n### Authorization\r\nRequires authenticated user.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "groupId",
            "in": "path",
            "description": "Topic board group id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/issues/boards/{topicBoardId}/priorities": {
      "get": {
        "tags": [
          "TopicBoardPriority"
        ],
        "summary": "Get topic priorities available on the topic board.",
        "description": "## Usage\r\nReturns a collection of all topic priorities available on the specified topic board.\r\n            \r\n### Authorization\r\nRequires authenticated user.",
        "parameters": [
          {
            "name": "topicBoardId",
            "in": "path",
            "description": "Topic board id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CdeTopicBoardPriorityDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CdeTopicBoardPriorityDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CdeTopicBoardPriorityDto"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TopicBoardPriority"
        ],
        "summary": "Add new topic priority.",
        "description": "## Usage\r\nAdd new topic priority to the topic board. Priority name should be unique for the topic board.\r\n            \r\n### Authorization\r\nRequires authenticated user.\r\n            \r\n### Error codes\r\n- `CDE:NameShouldBeUnique`",
        "parameters": [
          {
            "name": "topicBoardId",
            "in": "path",
            "description": "Topic board id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Data to create priority.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeCreateOrUpdateTopicBoardPriorityDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeCreateOrUpdateTopicBoardPriorityDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CdeCreateOrUpdateTopicBoardPriorityDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicBoardPriorityDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicBoardPriorityDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicBoardPriorityDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/issues/boards/{topicBoardId}/priorities/{priorityId}": {
      "put": {
        "tags": [
          "TopicBoardPriority"
        ],
        "summary": "Edit topic priority.",
        "description": "## Usage\r\nEdit existing topic priority. Priority name should be unique for the topic board.\r\n            \r\n### Authorization\r\nRequires authenticated user.\r\n            \r\n### Error codes\r\n- `CDE:NameShouldBeUnique`",
        "parameters": [
          {
            "name": "topicBoardId",
            "in": "path",
            "description": "Topic board id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "priorityId",
            "in": "path",
            "description": "Topic priority id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Data to update status.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeCreateOrUpdateTopicBoardPriorityDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeCreateOrUpdateTopicBoardPriorityDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CdeCreateOrUpdateTopicBoardPriorityDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicBoardPriorityDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicBoardPriorityDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicBoardPriorityDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TopicBoardPriority"
        ],
        "summary": "Delete topic priority.",
        "description": "## Usage\r\nDeletes topic priority from the topic board.\r\n            \r\n### Authorization\r\nRequires authenticated user.\r\n            \r\n### Error codes",
        "parameters": [
          {
            "name": "topicBoardId",
            "in": "path",
            "description": "Topic board id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "priorityId",
            "in": "path",
            "description": "Topic priority id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/projects/{projectId}/issues/boards/{boardId}": {
      "get": {
        "tags": [
          "TopicBoards"
        ],
        "summary": "Get topic board details.",
        "description": "## Usage\r\nReturns topic board info with project custom fields information.\r\n            \r\n### Authorization\r\nRequires authenticated user.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project Id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "boardId",
            "in": "path",
            "description": "Topic board id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicBoardDetailsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicBoardDetailsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicBoardDetailsDto"
                }
              }
            }
          },
          "401": {
            "description": "User is not authenticated.",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "User does not have necessary permissions.",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Entity is not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal error.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/projects/{projectId}/issues/boards": {
      "post": {
        "tags": [
          "TopicBoards"
        ],
        "summary": "Create new topic board.",
        "description": "## Usage\r\nCreates new topic board.\r\n            \r\n### Authorization\r\nRequires authenticated user.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "New topic board data.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeCreateTopicBoardDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeCreateTopicBoardDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CdeCreateTopicBoardDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicBoardDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicBoardDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicBoardDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/projects/{projectId}/issues/boards/{topicBoardId}": {
      "put": {
        "tags": [
          "TopicBoards"
        ],
        "summary": "Update topic board.",
        "description": "## Usage\r\nUpdates the topic board.\r\n            \r\n### Authorization\r\nRequires authenticated user.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "topicBoardId",
            "in": "path",
            "description": "Topic board id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "New topic board data.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeUpdateTopicBoardDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeUpdateTopicBoardDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CdeUpdateTopicBoardDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicBoardDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicBoardDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicBoardDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "TopicBoards"
        ],
        "summary": "Edit custom fields of a topic board.",
        "description": "## Usage\r\nMakes changes to the topic board custom fields configuration.\r\n            \r\nWhen adding or modifying custom fields default value format depends on custom field type:\r\n- for date fields value should contain a date in RFC3339 format\r\n- for bool fields value should be either `true` or `false`\r\n- for enumeration fields default value should contain one of enumeration items id.\r\n            \r\n### Authorization\r\nRequires authenticated user.\r\n            \r\n### Error codes:\r\n- `CDE:CustomFieldAlreadyExists` - when trying to add custom field that was already added to a topic board.\r\n- `CDE:CustomFieldInvalidValueFormat` - when custom field default value can not be parsed according to custom field type.\r\n- `CDE:CustomFieldValueIsRequired` - when trying to set empty default value to a field marked as required.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "topicBoardId",
            "in": "path",
            "description": "Topic board id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Data defining changes to topic board custom fields.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeUpdateTopicBoardCustomFieldsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeUpdateTopicBoardCustomFieldsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CdeUpdateTopicBoardCustomFieldsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicBoardDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicBoardDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicBoardDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TopicBoards"
        ],
        "summary": "Remove topic board.",
        "description": "## Usage\r\nRemoves the topic board.\r\n            \r\n### Authorization\r\nRequires authenticated user.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "topicBoardId",
            "in": "path",
            "description": "Topic board id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/issues/boards/{topicBoardId}/statuses": {
      "get": {
        "tags": [
          "TopicBoardStatus"
        ],
        "summary": "Get statuses available on the topic board.",
        "description": "## Usage\r\nReturns a collection of all statuses available on the specified topic board.\r\n            \r\n### Authorization\r\nRequires authenticated user.",
        "parameters": [
          {
            "name": "topicBoardId",
            "in": "path",
            "description": "Topic board id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CdeTopicBoardStatusDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CdeTopicBoardStatusDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CdeTopicBoardStatusDto"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TopicBoardStatus"
        ],
        "summary": "Add new status.",
        "description": "## Usage\r\nAdd new topic status to the topic board. Status name should be unique for the topic board.\r\n            \r\n### Authorization\r\nRequires authenticated user.\r\n            \r\n### Error codes\r\n- `CDE:NameShouldBeUnique`",
        "parameters": [
          {
            "name": "topicBoardId",
            "in": "path",
            "description": "Topic board id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Data to create status.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeCreateOrUpdateTopicBoardStatusDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeCreateOrUpdateTopicBoardStatusDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CdeCreateOrUpdateTopicBoardStatusDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicBoardStatusDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicBoardStatusDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicBoardStatusDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/issues/boards/{topicBoardId}/statuses/{statusId}": {
      "put": {
        "tags": [
          "TopicBoardStatus"
        ],
        "summary": "Edit status.",
        "description": "## Usage\r\nEdit existing topic status. Status name should be unique for the topic board.\r\n            \r\n### Authorization\r\nRequires authenticated user.\r\n            \r\n### Error codes\r\n- `CDE:NameShouldBeUnique`",
        "parameters": [
          {
            "name": "topicBoardId",
            "in": "path",
            "description": "Topic board id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "statusId",
            "in": "path",
            "description": "Topic status id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Data to update status.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeCreateOrUpdateTopicBoardStatusDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeCreateOrUpdateTopicBoardStatusDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CdeCreateOrUpdateTopicBoardStatusDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicBoardStatusDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicBoardStatusDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicBoardStatusDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TopicBoardStatus"
        ],
        "summary": "Delete topic status.",
        "description": "## Usage\r\nDeletes topic status from the topic board.\r\n            \r\n### Authorization\r\nRequires authenticated user.\r\n            \r\n### Error codes",
        "parameters": [
          {
            "name": "topicBoardId",
            "in": "path",
            "description": "Topic board id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "statusId",
            "in": "path",
            "description": "Topic status id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/issues/boards/{topicBoardId}/types": {
      "get": {
        "tags": [
          "TopicBoardType"
        ],
        "summary": "Get topic types available on the topic board.",
        "description": "## Usage\r\nReturns a collection of all topic types available on the specified topic board.\r\n            \r\n### Authorization\r\nRequires authenticated user.",
        "parameters": [
          {
            "name": "topicBoardId",
            "in": "path",
            "description": "Topic board id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CdeTopicBoardTypeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CdeTopicBoardTypeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CdeTopicBoardTypeDto"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TopicBoardType"
        ],
        "summary": "Add new topic type.",
        "description": "## Usage\r\nAdd new topic type to the topic board. Type name should be unique for the topic board.\r\n            \r\n### Authorization\r\nRequires authenticated user.\r\n            \r\n### Error codes\r\n- `CDE:NameShouldBeUnique`",
        "parameters": [
          {
            "name": "topicBoardId",
            "in": "path",
            "description": "Topic board id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Data to create type.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeCreateOrUpdateTopicBoardTypeDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeCreateOrUpdateTopicBoardTypeDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CdeCreateOrUpdateTopicBoardTypeDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicBoardTypeDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicBoardTypeDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicBoardTypeDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/issues/boards/{topicBoardId}/types/{typeId}": {
      "put": {
        "tags": [
          "TopicBoardType"
        ],
        "summary": "Edit topic type.",
        "description": "## Usage\r\nEdit existing topic type. Type name should be unique for the topic board.\r\n            \r\n### Authorization\r\nRequires authenticated user.\r\n            \r\n### Error codes\r\n- `CDE:NameShouldBeUnique`",
        "parameters": [
          {
            "name": "topicBoardId",
            "in": "path",
            "description": "Topic board id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "typeId",
            "in": "path",
            "description": "Topic type id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Data to update topic type.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeCreateOrUpdateTopicBoardTypeDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeCreateOrUpdateTopicBoardTypeDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CdeCreateOrUpdateTopicBoardTypeDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicBoardTypeDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicBoardTypeDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicBoardTypeDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TopicBoardType"
        ],
        "summary": "Delete topic type.",
        "description": "## Usage\r\nDeletes topic type from the topic board.\r\n            \r\n### Authorization\r\nRequires authenticated user.\r\n            \r\n### Error codes",
        "parameters": [
          {
            "name": "topicBoardId",
            "in": "path",
            "description": "Topic board id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "typeId",
            "in": "path",
            "description": "Topic type id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/issues/boards/{topicBoardId}/topics/comments/events": {
      "get": {
        "tags": [
          "TopicCommentEvents"
        ],
        "summary": "Get comment change events in a topic board.",
        "description": "## Usage\r\nRetrieves a list of events describing comment changes grouped by date.\r\n            \r\nNote: Whenever a comment has been created, the server also generates \"update\" events.\r\n            \r\nComment event types:\r\n| type | value |\r\n| --- | --- |\r\n| comment_created \t| null |\r\n| comment_text_updated | The comment text(limit: 1024 characters) |\r\n            \r\nEndpoint supports a following subset of OData query options:\r\n- `$filter` - specify items filter using [OData query operators](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part2-url-conventions.html#sec_SystemQueryOptions)\r\n- `$orderBy` - defines items sorting order. Events can be sorted only by `creationTime`,\r\n  e.g. `$orderBy=creationTime` (this is the default order) or `$orderBy=creationTime desc`.\r\n- `$top` - requests the number of items in the queried collection to be included in the result.\r\n- `$skip` - requests the number of items in the queried collection that are to be skipped and not included in the result.\r\n            \r\nSupported parameters for filtering are:\r\n- `topicId` - id of the parent topic\r\n- `commentId` - id of the comment\r\n- `author` - object representing the modification author\r\n- `type` - string type of the event\r\n- `creationTime` - date-time when the event took place\r\n            \r\nExample query may look like this:\r\n```\r\n\r\nGET api/issues/boards/{topicBoardId}/topics/comments/events?$orderBy=creationTime desc&$filter=author/name eq 'admin' and type eq 'comment_created'&$skip=10&$top=5\r\n\r\n```\r\n            \r\n### Authorization\r\nRequires authenticated user.",
        "parameters": [
          {
            "name": "topicBoardId",
            "in": "path",
            "description": "Topic board id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Specify items filter using OData query operators",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Endpoint-specific items filter",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderBy",
            "in": "query",
            "description": "Define items sorting order in format e.g. `$orderBy=name desc, creationTime`",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of items to skip from the beginning of requested collection. Used for pagination.",
            "allowReserved": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of items to take from requested collection. Used for pagination.",
            "allowReserved": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicCommentEventDtoPagedResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicCommentEventDtoPagedResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicCommentEventDtoPagedResultDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid query syntax.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "User is not authenticated.",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "User does not have necessary permissions.",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Entity does not exist or has been deleted.",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal error.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/issues/boards/{topicBoardId}/topics/{topicId}/comments/{commentId}/events": {
      "get": {
        "tags": [
          "TopicCommentEvents"
        ],
        "summary": "Get change events for a topic comment.",
        "description": "## Usage\r\nRetrieves a list of events describing comment changes grouped by date.\r\n            \r\nNote: Whenever a comment has been created, the server also generates \"update\" events.\r\n            \r\nTopic event types:\r\n| type | value |\r\n| --- | --- |\r\n| comment_created \t| null |\r\n| comment_text_updated | The comment text(limit: 1024 characters) |\r\n            \r\nEndpoint supports a following subset of OData query options:\r\n- `$filter` - specify items filter using [OData query operators](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part2-url-conventions.html#sec_SystemQueryOptions)\r\n- `$orderBy` - defines items sorting order. Events can be sorted only by `creationTime`,\r\n  e.g. `$orderBy=creationTime` (this is the default order) or `$orderBy=creationTime desc`.\r\n- `$top` - requests the number of items in the queried collection to be included in the result.\r\n- `$skip` - requests the number of items in the queried collection that are to be skipped and not included in the result.\r\n            \r\nSupported parameters for filtering are:\r\n- `topicId` - id of the parent topic\r\n- `commentId` - id of the comment\r\n- `author` - object representing the modification author\r\n- `type` - string type of the event\r\n- `creationTime` - date-time when the event took place\r\n            \r\nExample query may look like this:\r\n```\r\n\r\nGET api/issues/boards/{topicBoardId}/topics/{topicId}/comments/{commentId}/events?$orderBy=creationTime desc&$filter=author/name eq 'admin' and type eq 'comment_text_updated'&$skip=10&$top=5\r\n\r\n```\r\n            \r\n### Authorization\r\nRequires authenticated user.",
        "parameters": [
          {
            "name": "topicBoardId",
            "in": "path",
            "description": "Topic board id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "topicId",
            "in": "path",
            "description": "Topic id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "commentId",
            "in": "path",
            "description": "Comment id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Specify items filter using OData query operators",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Endpoint-specific items filter",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderBy",
            "in": "query",
            "description": "Define items sorting order in format e.g. `$orderBy=name desc, creationTime`",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of items to skip from the beginning of requested collection. Used for pagination.",
            "allowReserved": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of items to take from requested collection. Used for pagination.",
            "allowReserved": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicCommentEventDtoPagedResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicCommentEventDtoPagedResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicCommentEventDtoPagedResultDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid query syntax.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "User is not authenticated.",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "User does not have necessary permissions.",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Entity does not exist or has been deleted.",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal error.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/projects/{topicBoardId}/topics/{topicId}/comments": {
      "post": {
        "tags": [
          "TopicComments"
        ],
        "summary": "Creates a new topic comment.",
        "description": "## Usage\r\nCreates a new topic comment.\r\n            \r\n### Authorization\r\nRequired authenticated user.",
        "parameters": [
          {
            "name": "topicBoardId",
            "in": "path",
            "description": "Topic board ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "topicId",
            "in": "path",
            "description": "Topic ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The BimScanner.CDE.Topics.Comments.CreateTopicCommentDtoContaining details of the topic comment to create.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeCreateTopicCommentDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeCreateTopicCommentDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CdeCreateTopicCommentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicCommentDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicCommentDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicCommentDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "TopicComments"
        ],
        "summary": "Get topic comments.",
        "description": "## Usage\r\nGets a list of topic comments.\r\n            \r\n### Authorization\r\nRequired authenticated user.",
        "parameters": [
          {
            "name": "topicBoardId",
            "in": "path",
            "description": "Topic board ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "topicId",
            "in": "path",
            "description": "Topic ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CdeTopicCommentDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CdeTopicCommentDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CdeTopicCommentDto"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/projects/{topicBoardId}/topics/{topicId}/comments/{topicCommentId}": {
      "get": {
        "tags": [
          "TopicComments"
        ],
        "summary": "Get topic comment.",
        "description": "## Usage\r\nGet topic comment.\r\n            \r\n### Authorization\r\nRequired authenticated user.",
        "parameters": [
          {
            "name": "topicBoardId",
            "in": "path",
            "description": "Topic board ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "topicId",
            "in": "path",
            "description": "Topic ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "topicCommentId",
            "in": "path",
            "description": "Comment ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicCommentDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicCommentDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicCommentDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "TopicComments"
        ],
        "summary": "Update topic comment.",
        "description": "## Usage\r\nUpdates topic comment.\r\n            \r\n### Authorization\r\nRequired authenticated user.",
        "parameters": [
          {
            "name": "topicBoardId",
            "in": "path",
            "description": "Topic board ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "topicId",
            "in": "path",
            "description": "Topic ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "topicCommentId",
            "in": "path",
            "description": "Comment ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The BimScanner.CDE.Topics.Comments.UpdateTopicCommentDtoContaining updated details of the topic comment.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeUpdateTopicCommentDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeUpdateTopicCommentDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CdeUpdateTopicCommentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicCommentDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicCommentDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicCommentDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TopicComments"
        ],
        "summary": "Delete topic comment.",
        "description": "## Usage\r\nDeletes topic comment.\r\n            \r\n### Authorization\r\nRequired authenticated user.",
        "parameters": [
          {
            "name": "topicBoardId",
            "in": "path",
            "description": "Topic board ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "topicId",
            "in": "path",
            "description": "Topic ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "topicCommentId",
            "in": "path",
            "description": "Comment ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/issues/boards/{topicBoardId}/topics/events": {
      "get": {
        "tags": [
          "TopicEvents"
        ],
        "summary": "Get all topic change events in a topic board.",
        "description": "## Usage\r\nRetrieves a list of events describing topic changes grouped by date.\r\n            \r\nNote: Whenever a topic has been created, the server also generates \"update\" and \"add\" events for all fields\r\nthat are initially set. Example: If a topic contains a description, the `description_updated` event is generated.\r\n            \r\nTopic event types:\r\n| type | value |\r\n| --- | --- |\r\n| topic_created \t| null |\r\n| title_updated | The title(limit: 128 characters) |\r\n| description_updated | The description(limit: 1024 characters) |\r\n| description_removed \t| null |\r\n| status_updated | The status name |\r\n| type_updated | The type name |\r\n| priority_updated | The priority name |\r\n| priority_removed \t| null |\r\n| due_date_updated | The due date |\r\n| due_date_removed \t| null |\r\n| assigned_to_updated | The assigned user display name |\r\n| assigned_to_removed \t| null |\r\n| label_added | The added label name |\r\n| label_removed | The removed label name |\r\n            \r\nEndpoint supports a following subset of OData query options:\r\n- `$filter` - specify items filter using [OData query operators](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part2-url-conventions.html#sec_SystemQueryOptions)\r\n- `$orderBy` - defines items sorting order. Events can be sorted only by `creationTime`,\r\n  e.g. `$orderBy=creationTime` (this is the default order) or `$orderBy=creationTime desc`.\r\n- `$top` - requests the number of items in the queried collection to be included in the result.\r\n- `$skip` - requests the number of items in the queried collection that are to be skipped and not included in the result.\r\n            \r\nSupported parameters for filtering are:\r\n- `topicId` - uuid identifying the related topic.\r\n- `author` - object representing the modification author\r\n- `type` - string type of the event\r\n- `creationTime` - date-time when the event took place\r\n            \r\nExample query may look like this:\r\n```\r\n\r\nGET /api/issues/boards/{topicBoardId}/topics/events?$orderBy=creationTime desc&$filter=author/name eq 'user1' and type eq 'topic_created'&$skip=10&$top=5\r\n\r\n```\r\n            \r\n### Authorization\r\nRequires authenticated user.",
        "parameters": [
          {
            "name": "topicBoardId",
            "in": "path",
            "description": "Topic board id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Specify items filter using OData query operators",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Endpoint-specific items filter",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderBy",
            "in": "query",
            "description": "Define items sorting order in format e.g. `$orderBy=name desc, creationTime`",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of items to skip from the beginning of requested collection. Used for pagination.",
            "allowReserved": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of items to take from requested collection. Used for pagination.",
            "allowReserved": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicEventDtoPagedResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicEventDtoPagedResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicEventDtoPagedResultDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid query syntax.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "User is not authenticated.",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "User does not have necessary permissions.",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Entity does not exist or has been deleted.",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal error.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/issues/boards/{topicBoardId}/topics/{topicId}/events": {
      "get": {
        "tags": [
          "TopicEvents"
        ],
        "summary": "Get topic change events for a specified topic.",
        "description": "## Usage\r\nRetrieves a list of events describing topic changes grouped by date.\r\n            \r\nNote: Whenever a topic has been created, the server also generates \"update\" and \"add\" events for all fields\r\nthat are initially set. Example: If a topic contains a description, the `description_updated` event is generated.\r\n            \r\nTopic event types:\r\n| type | value |\r\n| --- | --- |\r\n| topic_created \t| null |\r\n| title_updated | The title(limit: 128 characters) |\r\n| description_updated | The description(limit: 1024 characters) |\r\n| description_removed \t| null |\r\n| status_updated | The status name |\r\n| type_updated | The type name |\r\n| priority_updated | The priority name |\r\n| priority_removed \t| null |\r\n| due_date_updated | The due date |\r\n| due_date_removed \t| null |\r\n| assigned_to_updated | The assigned user display name |\r\n| assigned_to_removed \t| null |\r\n| label_added | The added label name |\r\n| label_removed | The removed label name |\r\n            \r\nEndpoint supports a following subset of OData query options:\r\n- `$filter` - specify items filter using [OData query operators](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part2-url-conventions.html#sec_SystemQueryOptions)\r\n- `$orderBy` - defines items sorting order. Events can be sorted only by `creationTime`,\r\n  e.g. `$orderBy=creationTime` (this is the default order) or `$orderBy=creationTime desc`.\r\n- `$top` - requests the number of items in the queried collection to be included in the result.\r\n- `$skip` - requests the number of items in the queried collection that are to be skipped and not included in the result.\r\n            \r\nSupported parameters for filtering are:\r\n- `author` - object representing the modification author\r\n- `type` - string type of the event\r\n- `creationTime` - date-time when the event took place\r\n            \r\nExample query may look like this:\r\n```\r\n\r\nGET /api/issues/boards/{topicBoardId}/topics/{topicId}/events?$orderBy=creationTime desc&$filter=author/name eq 'user1' and type eq 'topic_created'&$skip=10&$top=5\r\n\r\n```\r\n            \r\n### Authorization\r\nRequires authenticated user.",
        "parameters": [
          {
            "name": "topicBoardId",
            "in": "path",
            "description": "Topic board id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "topicId",
            "in": "path",
            "description": "Topic id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Specify items filter using OData query operators",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Endpoint-specific items filter",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderBy",
            "in": "query",
            "description": "Define items sorting order in format e.g. `$orderBy=name desc, creationTime`",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of items to skip from the beginning of requested collection. Used for pagination.",
            "allowReserved": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of items to take from requested collection. Used for pagination.",
            "allowReserved": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicEventDtoPagedResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicEventDtoPagedResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicEventDtoPagedResultDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid query syntax.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "User is not authenticated.",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "User does not have necessary permissions.",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Entity does not exist or has been deleted.",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal error.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/issues/boards/{topicBoardId}/topics": {
      "get": {
        "tags": [
          "Topics"
        ],
        "summary": "Retrieves a list of topics for a specific topic board.",
        "description": "## Usage\r\nRetrieves a list of topics associated with a specific topic board.\r\n            \r\nEndpoint supports a following subset of OData query options:\r\n- `$filter` - specify items filter using [OData query operators](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part2-url-conventions.html#sec_SystemQueryOptions)\r\n- `$search` - applies case-insensitive filter by text that should be contained in project name.\r\n- `$orderBy` - defines items sorting order in format e.g. `$orderBy=name desc,creationDate`.\r\n- `$top` - requests the number of items in the queried collection to be included in the result.\r\n- `$skip` - requests the number of items in the queried collection that are to be skipped and not included in the result.\r\n            \r\nExample query may look like this:\r\n```\r\n\r\nGET /api/issues/boards/{topicBoardId}/topics?$orderBy=creationTime&$search=example&$skip=10&$top=5\r\n\r\n```\r\n            \r\n### Response\r\nThe endpoint returns the total number of topics in the `X-Total-Count` response header along with the paginated collection of topics in the body.\r\n            \r\n### Authorization\r\nUsers must have permission to access the topics associated with the specified topic board.",
        "parameters": [
          {
            "name": "topicBoardId",
            "in": "path",
            "description": "Topic board id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "labels",
            "in": "query",
            "description": "Ids of the labels that should be attached to topic. All specified labels should be present.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Specify items filter using OData query operators",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Endpoint-specific items filter",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderBy",
            "in": "query",
            "description": "Define items sorting order in format e.g. `$orderBy=name desc, creationTime`",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of items to skip from the beginning of requested collection. Used for pagination.",
            "allowReserved": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of items to take from requested collection. Used for pagination.",
            "allowReserved": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicDetailsDtoPagedResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicDetailsDtoPagedResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicDetailsDtoPagedResultDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid query syntax.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "User is not authenticated.",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "User does not have necessary permissions.",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal error.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Topics"
        ],
        "summary": "Creates a new topic.",
        "description": "## Usage\r\nCreates a new topic on specified topic board.\r\n            \r\n### Authorization\r\nRequires authenticated user.",
        "parameters": [
          {
            "name": "topicBoardId",
            "in": "path",
            "description": "Id of a topic board.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The BimScanner.CDE.Topics.CreateTopicDto containing details of the topic to create.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeCreateTopicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeCreateTopicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CdeCreateTopicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicDetailsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicDetailsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicDetailsDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/projects/{projectId}/topics": {
      "get": {
        "tags": [
          "Topics"
        ],
        "summary": "Retrieves a list of topics for a specific project.",
        "description": "## Usage\r\nRetrieves a list of topics associated with a specific project.\r\n            \r\nEndpoint supports a following subset of OData query options:\r\n- `$filter` - specify items filter using [OData query operators](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part2-url-conventions.html#sec_SystemQueryOptions)\r\n- `$search` - applies case-insensitive filter by text that should be contained in project name.\r\n- `$orderBy` - defines items sorting order in format e.g. `$orderBy=name desc,creationDate`.\r\n- `$top` - requests the number of items in the queried collection to be included in the result.\r\n- `$skip` - requests the number of items in the queried collection that are to be skipped and not included in the result.\r\n            \r\nExample query may look like this:\r\n```\r\n\r\nGET /api/projects/{projectId}/topics?$orderBy=creationTime&$search=example&$skip=10&$top=5\r\n\r\n```\r\n            \r\n### Response\r\nThe endpoint returns the total number of topics in the `X-Total-Count` response header along with the paginated collection of topics in the body.\r\n            \r\n### Authorization\r\nUsers must have permission to access the topics associated with the specified project.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "labels",
            "in": "query",
            "description": "Ids of the labels that should be attached to topic. All specified labels should be present.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Specify items filter using OData query operators",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Endpoint-specific items filter",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderBy",
            "in": "query",
            "description": "Define items sorting order in format e.g. `$orderBy=name desc, creationTime`",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of items to skip from the beginning of requested collection. Used for pagination.",
            "allowReserved": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of items to take from requested collection. Used for pagination.",
            "allowReserved": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicDetailsDtoPagedResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicDetailsDtoPagedResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicDetailsDtoPagedResultDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid query syntax.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "User is not authenticated.",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "User does not have necessary permissions.",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal error.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/issues/boards/{topicBoardId}/topics/{topicId}": {
      "get": {
        "tags": [
          "Topics"
        ],
        "summary": "Get topic by topic ID and topic-board ID.",
        "parameters": [
          {
            "name": "topicBoardId",
            "in": "path",
            "description": "ID of a topic board.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "topicId",
            "in": "path",
            "description": "Topic ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicDetailsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicDetailsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicDetailsDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Topics"
        ],
        "summary": "Updates an existing topic.",
        "parameters": [
          {
            "name": "topicBoardId",
            "in": "path",
            "description": "Topic board id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "topicId",
            "in": "path",
            "description": "Topic id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The data containing updated details of the topic.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeUpdateTopicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeUpdateTopicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CdeUpdateTopicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicDetailsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicDetailsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicDetailsDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Topics"
        ],
        "summary": "Deletes a topic by its ID.",
        "parameters": [
          {
            "name": "topicBoardId",
            "in": "path",
            "description": "Topic board id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "topicId",
            "in": "path",
            "description": "Topic id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/issues/boards/{topicBoardId}/topics/{topicId}/elements": {
      "get": {
        "tags": [
          "Topics"
        ],
        "summary": "Get references to model elements defined for specified topic.",
        "description": "## Usage\r\nReturns collection of elements related to specified topic.\r\n            \r\n### Authorization\r\nRequires authenticated user.",
        "parameters": [
          {
            "name": "topicBoardId",
            "in": "path",
            "description": "Topic board id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "topicId",
            "in": "path",
            "description": "Topic id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CdeTopicModelElementsDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CdeTopicModelElementsDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CdeTopicModelElementsDto"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Topics"
        ],
        "summary": "Set references to model elements.",
        "description": "## Usage\r\nSets element references for specified topic.\r\n            \r\n### Authorization\r\nRequires authenticated user.",
        "parameters": [
          {
            "name": "topicBoardId",
            "in": "path",
            "description": "Topic board id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "topicId",
            "in": "path",
            "description": "Topic id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Element references info.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CdeSetTopicModelElementsDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CdeSetTopicModelElementsDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CdeSetTopicModelElementsDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicDetailsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicDetailsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicDetailsDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/issues/boards/{topicBoardId}/exports": {
      "post": {
        "tags": [
          "TopicsExport"
        ],
        "parameters": [
          {
            "name": "topicBoardId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "labels",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Specify items filter using OData query operators",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Endpoint-specific items filter",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderBy",
            "in": "query",
            "description": "Define items sorting order in format e.g. `$orderBy=name desc, creationTime`",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of items to skip from the beginning of requested collection. Used for pagination.",
            "allowReserved": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of items to take from requested collection. Used for pagination.",
            "allowReserved": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeTopicsExportOptionsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeTopicsExportOptionsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CdeTopicsExportOptionsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/issues/boards/{topicBoardId}/imports": {
      "post": {
        "tags": [
          "TopicsImport"
        ],
        "summary": "Import topics from BCF file.",
        "description": "## Usage\r\nUploads BCF file and imports data from it into the system.\r\nReturns import summary log.\r\n            \r\n### Authorization\r\nUser should be authenticated.",
        "parameters": [
          {
            "name": "topicBoardId",
            "in": "path",
            "description": "Topic board id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicsImportSummaryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicsImportSummaryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeTopicsImportSummaryDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid file format.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "User is not authenticated.",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "User does not have a permission to upload models.",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal error.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/issues/boards/{topicBoardId}/topics/{topicId}/viewpoints": {
      "get": {
        "tags": [
          "TopicViewpoints"
        ],
        "summary": "List all topic viewpoints.",
        "description": "## Usage\r\nRetrieves a list of all topic viewpoints.\r\n            \r\n### Authorization\r\nRequires authenticated user.",
        "parameters": [
          {
            "name": "topicBoardId",
            "in": "path",
            "description": "Topic board ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "topicId",
            "in": "path",
            "description": "Topic ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CdeViewpointDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CdeViewpointDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CdeViewpointDto"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TopicViewpoints"
        ],
        "summary": "Create a new topic viewpoint.",
        "description": "## Usage\r\nCreate a new topic viewpoint.\r\n            \r\nViewpoint requires to specify a camera. Supported camera types are `PerspectiveCamera` and `OrthogonalCamera`.\r\n            \r\n### Authorization\r\nRequires authenticated user.",
        "parameters": [
          {
            "name": "topicBoardId",
            "in": "path",
            "description": "Topic Board ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "topicId",
            "in": "path",
            "description": "Topic ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The BimScanner.CDE.Viewpoints.CreateViewpointDtoContaining details of a viewpoint to create.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeCreateViewpointDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeCreateViewpointDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CdeCreateViewpointDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeViewpointDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeViewpointDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeViewpointDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/issues/boards/{topicBoardId}/topics/{topicId}/viewpoints/{viewpointId}": {
      "get": {
        "tags": [
          "TopicViewpoints"
        ],
        "summary": "Get a single topic viewpoint.",
        "description": "## Usage\r\nRetrieves a topic viewpoint.\r\n            \r\n### Authorization\r\nRequires authenticated user.",
        "parameters": [
          {
            "name": "topicBoardId",
            "in": "path",
            "description": "Topic board ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "topicId",
            "in": "path",
            "description": "Topic ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "viewpointId",
            "in": "path",
            "description": "Viewpoint ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeViewpointDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeViewpointDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeViewpointDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TopicViewpoints"
        ],
        "summary": "Delete a viewpoint.",
        "description": "## Usage\r\nDeletes a viewpoint.\r\n            \r\n### Authorization\r\nRequires authenticated user.",
        "parameters": [
          {
            "name": "topicBoardId",
            "in": "path",
            "description": "Topic board ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "topicId",
            "in": "path",
            "description": "Topic ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "viewpointId",
            "in": "path",
            "description": "Viewpoint ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/issues/boards/{topicBoardId}/topics/{topicId}/viewpoints/{viewpointId}/snapshot": {
      "get": {
        "tags": [
          "TopicViewpoints"
        ],
        "summary": "Get viewpoint snapshot image.",
        "parameters": [
          {
            "name": "topicBoardId",
            "in": "path",
            "description": "Topic board ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "topicId",
            "in": "path",
            "description": "Topic ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "viewpointId",
            "in": "path",
            "description": "Viewpoint ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/issues/boards/{topicBoardId}/topics/{topicId}/viewpoints/{viewpointId}/bitmaps/{bitmapId}": {
      "get": {
        "tags": [
          "TopicViewpoints"
        ],
        "summary": "Get bitmap image.",
        "parameters": [
          {
            "name": "topicBoardId",
            "in": "path",
            "description": "Topic board ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "topicId",
            "in": "path",
            "description": "Topic ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "viewpointId",
            "in": "path",
            "description": "Viewpoint ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "bitmapId",
            "in": "path",
            "description": "Bitmap ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/issues/boards/{topicBoardId}/topics/{topicId}/viewpoints/{viewpointId}/models": {
      "put": {
        "tags": [
          "TopicViewpoints"
        ],
        "summary": "Update viewpoint model references.",
        "description": "## Usage\r\nAllows to set model references for specified viewpoint.\r\n            \r\n### Authorization\r\nRequires authenticated user.",
        "parameters": [
          {
            "name": "topicBoardId",
            "in": "path",
            "description": "Topic Board ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "topicId",
            "in": "path",
            "description": "Topic ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "viewpointId",
            "in": "path",
            "description": "Viewpoint ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Data to update model references.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeUpdateViewpointModelsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CdeUpdateViewpointModelsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CdeUpdateViewpointModelsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeViewpointDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeViewpointDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeViewpointDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/issues/boards/{topicBoardId}/topics/{topicId}/viewpoints/{viewpointId}/selection": {
      "get": {
        "tags": [
          "TopicViewpoints"
        ],
        "summary": "Get the selection of a topic viewpoint.",
        "description": "## Usage\r\nGet the selection of a topic viewpoint.\r\n            \r\n### Authorization\r\nRequires authenticated user.",
        "parameters": [
          {
            "name": "topicBoardId",
            "in": "path",
            "description": "Topic board ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "topicId",
            "in": "path",
            "description": "Topic ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "viewpointId",
            "in": "path",
            "description": "Viewpoint ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CdeViewpointComponentDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CdeViewpointComponentDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CdeViewpointComponentDto"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/issues/boards/{topicBoardId}/topics/{topicId}/viewpoints/{viewpointId}/visibility": {
      "get": {
        "tags": [
          "TopicViewpoints"
        ],
        "summary": "Get visibility of a topic viewpoint.",
        "description": "## Usage\r\nGet visibility of a topic viewpoint.\r\n            \r\n### Authorization\r\nRequires authenticated user.",
        "parameters": [
          {
            "name": "topicBoardId",
            "in": "path",
            "description": "Topic board ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "topicId",
            "in": "path",
            "description": "Topic ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "viewpointId",
            "in": "path",
            "description": "Viewpoint ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CdeComponentsVisibilityInfoDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeComponentsVisibilityInfoDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdeComponentsVisibilityInfoDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/issues/boards/{topicBoardId}/topics/{topicId}/viewpoints/{viewpointId}/coloring": {
      "get": {
        "tags": [
          "TopicViewpoints"
        ],
        "summary": "Get the coloring of a topic viewpoint.",
        "description": "## Usage\r\nGet the coloring of a topic viewpoint.\r\n            \r\n### Authorization\r\nRequires authenticated user.",
        "parameters": [
          {
            "name": "topicBoardId",
            "in": "path",
            "description": "Topic board ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "topicId",
            "in": "path",
            "description": "Topic ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "viewpointId",
            "in": "path",
            "description": "Viewpoint ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CdeColoringComponentsGroupDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CdeColoringComponentsGroupDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CdeColoringComponentsGroupDto"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/identity/users/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "[ABP] Get user by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpIdentityUserDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpIdentityUserDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpIdentityUserDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "[ABP] Update user data.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AbpIdentityUserUpdateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AbpIdentityUserUpdateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AbpIdentityUserUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpIdentityUserDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpIdentityUserDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpIdentityUserDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "[ABP] Delete user.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/identity/users": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "[ABP] Get users with paging and filtering.",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ExtraProperties",
            "in": "query",
            "schema": {
              "type": "object",
              "additionalProperties": { }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpIdentityUserDtoPagedResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpIdentityUserDtoPagedResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpIdentityUserDtoPagedResultDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "User"
        ],
        "summary": "[ABP] Create new user.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AbpIdentityUserCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AbpIdentityUserCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AbpIdentityUserCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpIdentityUserDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpIdentityUserDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpIdentityUserDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/identity/users/{id}/roles": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "[ABP] Get user roles.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpIdentityRoleDtoListResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpIdentityRoleDtoListResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpIdentityRoleDtoListResultDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "[ABP] Set user roles.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AbpIdentityUserUpdateRolesDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AbpIdentityUserUpdateRolesDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AbpIdentityUserUpdateRolesDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/identity/users/assignable-roles": {
      "get": {
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpIdentityRoleDtoListResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpIdentityRoleDtoListResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpIdentityRoleDtoListResultDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/identity/users/by-username/{userName}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "[ABP] Find user by username.",
        "parameters": [
          {
            "name": "userName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpIdentityUserDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpIdentityUserDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpIdentityUserDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/identity/users/by-email/{email}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "[ABP] Find user by email.",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpIdentityUserDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpIdentityUserDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpIdentityUserDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/identity/users/lookup/{id}": {
      "get": {
        "tags": [
          "UserLookup"
        ],
        "summary": "[ABP] [Obsolete] Find user by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpUserData"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpUserData"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpUserData"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/identity/users/lookup/by-username/{userName}": {
      "get": {
        "tags": [
          "UserLookup"
        ],
        "summary": "[ABP] [Obsolete] Find user by username.",
        "parameters": [
          {
            "name": "userName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpUserData"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpUserData"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpUserData"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/identity/users/lookup/search": {
      "get": {
        "tags": [
          "UserLookup"
        ],
        "summary": "[ABP] [Obsolete] Find users by name or email.",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ExtraProperties",
            "in": "query",
            "schema": {
              "type": "object",
              "additionalProperties": { }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpUserDataListResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpUserDataListResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpUserDataListResultDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/identity/users/lookup/count": {
      "get": {
        "tags": [
          "UserLookup"
        ],
        "summary": "[ABP] [Obsolete] Count users with specified filter.",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpRemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AbpActionApiDescriptionModel": {
        "type": "object",
        "properties": {
          "uniqueName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "httpMethod": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "supportedVersions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "parametersOnMethod": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AbpMethodParameterApiDescriptionModel"
            },
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AbpParameterApiDescriptionModel"
            },
            "nullable": true
          },
          "returnValue": {
            "$ref": "#/components/schemas/AbpReturnValueApiDescriptionModel"
          },
          "allowAnonymous": {
            "type": "boolean",
            "nullable": true
          },
          "implementFrom": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AbpApplicationApiDescriptionModel": {
        "type": "object",
        "properties": {
          "modules": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/AbpModuleApiDescriptionModel"
            },
            "nullable": true
          },
          "types": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/AbpTypeApiDescriptionModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Application API description data."
      },
      "AbpApplicationAuthConfigurationDto": {
        "type": "object",
        "properties": {
          "grantedPolicies": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AbpApplicationConfigurationDto": {
        "type": "object",
        "properties": {
          "localization": {
            "$ref": "#/components/schemas/AbpApplicationLocalizationConfigurationDto"
          },
          "auth": {
            "$ref": "#/components/schemas/AbpApplicationAuthConfigurationDto"
          },
          "setting": {
            "$ref": "#/components/schemas/AbpApplicationSettingConfigurationDto"
          },
          "currentUser": {
            "$ref": "#/components/schemas/AbpCurrentUserDto"
          },
          "features": {
            "$ref": "#/components/schemas/AbpApplicationFeatureConfigurationDto"
          },
          "globalFeatures": {
            "$ref": "#/components/schemas/AbpApplicationGlobalFeatureConfigurationDto"
          },
          "multiTenancy": {
            "$ref": "#/components/schemas/AbpMultiTenancyInfoDto"
          },
          "currentTenant": {
            "$ref": "#/components/schemas/AbpCurrentTenantDto"
          },
          "timing": {
            "$ref": "#/components/schemas/AbpTimingDto"
          },
          "clock": {
            "$ref": "#/components/schemas/AbpClockDto"
          },
          "objectExtensions": {
            "$ref": "#/components/schemas/AbpObjectExtensionsDto"
          },
          "extraProperties": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AbpApplicationFeatureConfigurationDto": {
        "type": "object",
        "properties": {
          "values": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AbpApplicationGlobalFeatureConfigurationDto": {
        "type": "object",
        "properties": {
          "enabledFeatures": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AbpApplicationLocalizationConfigurationDto": {
        "type": "object",
        "properties": {
          "values": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "nullable": true
          },
          "resources": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/AbpApplicationLocalizationResourceDto"
            },
            "nullable": true
          },
          "languages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AbpLanguageInfo"
            },
            "nullable": true
          },
          "currentCulture": {
            "$ref": "#/components/schemas/AbpCurrentCultureDto"
          },
          "defaultResourceName": {
            "type": "string",
            "nullable": true
          },
          "languagesMap": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AbpNameValue"
              }
            },
            "nullable": true
          },
          "languageFilesMap": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AbpNameValue"
              }
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AbpApplicationLocalizationDto": {
        "type": "object",
        "properties": {
          "resources": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/AbpApplicationLocalizationResourceDto"
            },
            "nullable": true
          },
          "currentCulture": {
            "$ref": "#/components/schemas/AbpCurrentCultureDto"
          }
        },
        "additionalProperties": false
      },
      "AbpApplicationLocalizationResourceDto": {
        "type": "object",
        "properties": {
          "texts": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "baseResources": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AbpApplicationSettingConfigurationDto": {
        "type": "object",
        "properties": {
          "values": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AbpChangePasswordInput": {
        "required": [
          "newPassword"
        ],
        "type": "object",
        "properties": {
          "currentPassword": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "newPassword": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "AbpClockDto": {
        "type": "object",
        "properties": {
          "kind": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AbpControllerApiDescriptionModel": {
        "type": "object",
        "properties": {
          "controllerName": {
            "type": "string",
            "nullable": true
          },
          "controllerGroupName": {
            "type": "string",
            "nullable": true
          },
          "isRemoteService": {
            "type": "boolean"
          },
          "isIntegrationService": {
            "type": "boolean"
          },
          "apiVersion": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "interfaces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AbpControllerInterfaceApiDescriptionModel"
            },
            "nullable": true
          },
          "actions": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/AbpActionApiDescriptionModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AbpControllerInterfaceApiDescriptionModel": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "methods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AbpInterfaceMethodApiDescriptionModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AbpCurrentCultureDto": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "englishName": {
            "type": "string",
            "nullable": true
          },
          "threeLetterIsoLanguageName": {
            "type": "string",
            "nullable": true
          },
          "twoLetterIsoLanguageName": {
            "type": "string",
            "nullable": true
          },
          "isRightToLeft": {
            "type": "boolean"
          },
          "cultureName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "nativeName": {
            "type": "string",
            "nullable": true
          },
          "dateTimeFormat": {
            "$ref": "#/components/schemas/AbpDateTimeFormatDto"
          }
        },
        "additionalProperties": false
      },
      "AbpCurrentTenantDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "isAvailable": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "AbpCurrentUserDto": {
        "type": "object",
        "properties": {
          "isAuthenticated": {
            "type": "boolean"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "tenantId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "impersonatorUserId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "impersonatorTenantId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "impersonatorUserName": {
            "type": "string",
            "nullable": true
          },
          "impersonatorTenantName": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "surName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "emailVerified": {
            "type": "boolean"
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "phoneNumberVerified": {
            "type": "boolean"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "sessionId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AbpDateTimeFormatDto": {
        "type": "object",
        "properties": {
          "calendarAlgorithmType": {
            "type": "string",
            "nullable": true
          },
          "dateTimeFormatLong": {
            "type": "string",
            "nullable": true
          },
          "shortDatePattern": {
            "type": "string",
            "nullable": true
          },
          "fullDateTimePattern": {
            "type": "string",
            "nullable": true
          },
          "dateSeparator": {
            "type": "string",
            "nullable": true
          },
          "shortTimePattern": {
            "type": "string",
            "nullable": true
          },
          "longTimePattern": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AbpEmailSettingsDto": {
        "type": "object",
        "properties": {
          "smtpHost": {
            "type": "string",
            "nullable": true
          },
          "smtpPort": {
            "type": "integer",
            "format": "int32"
          },
          "smtpUserName": {
            "type": "string",
            "nullable": true
          },
          "smtpPassword": {
            "type": "string",
            "nullable": true
          },
          "smtpDomain": {
            "type": "string",
            "nullable": true
          },
          "smtpEnableSsl": {
            "type": "boolean"
          },
          "smtpUseDefaultCredentials": {
            "type": "boolean"
          },
          "defaultFromAddress": {
            "type": "string",
            "nullable": true
          },
          "defaultFromDisplayName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AbpEntityExtensionDto": {
        "type": "object",
        "properties": {
          "properties": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/AbpExtensionPropertyDto"
            },
            "nullable": true
          },
          "configuration": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AbpExtensionEnumDto": {
        "type": "object",
        "properties": {
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AbpExtensionEnumFieldDto"
            },
            "nullable": true
          },
          "localizationResource": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AbpExtensionEnumFieldDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AbpExtensionPropertyApiCreateDto": {
        "type": "object",
        "properties": {
          "isAvailable": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "AbpExtensionPropertyApiDto": {
        "type": "object",
        "properties": {
          "onGet": {
            "$ref": "#/components/schemas/AbpExtensionPropertyApiGetDto"
          },
          "onCreate": {
            "$ref": "#/components/schemas/AbpExtensionPropertyApiCreateDto"
          },
          "onUpdate": {
            "$ref": "#/components/schemas/AbpExtensionPropertyApiUpdateDto"
          }
        },
        "additionalProperties": false
      },
      "AbpExtensionPropertyApiGetDto": {
        "type": "object",
        "properties": {
          "isAvailable": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "AbpExtensionPropertyApiUpdateDto": {
        "type": "object",
        "properties": {
          "isAvailable": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "AbpExtensionPropertyAttributeDto": {
        "type": "object",
        "properties": {
          "typeSimple": {
            "type": "string",
            "nullable": true
          },
          "config": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AbpExtensionPropertyDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "typeSimple": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "$ref": "#/components/schemas/AbpLocalizableStringDto"
          },
          "api": {
            "$ref": "#/components/schemas/AbpExtensionPropertyApiDto"
          },
          "ui": {
            "$ref": "#/components/schemas/AbpExtensionPropertyUiDto"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AbpExtensionPropertyAttributeDto"
            },
            "nullable": true
          },
          "configuration": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "defaultValue": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AbpExtensionPropertyUiDto": {
        "type": "object",
        "properties": {
          "onTable": {
            "$ref": "#/components/schemas/AbpExtensionPropertyUiTableDto"
          },
          "onCreateForm": {
            "$ref": "#/components/schemas/AbpExtensionPropertyUiFormDto"
          },
          "onEditForm": {
            "$ref": "#/components/schemas/AbpExtensionPropertyUiFormDto"
          },
          "lookup": {
            "$ref": "#/components/schemas/AbpExtensionPropertyUiLookupDto"
          }
        },
        "additionalProperties": false
      },
      "AbpExtensionPropertyUiFormDto": {
        "type": "object",
        "properties": {
          "isVisible": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "AbpExtensionPropertyUiLookupDto": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "nullable": true
          },
          "resultListPropertyName": {
            "type": "string",
            "nullable": true
          },
          "displayPropertyName": {
            "type": "string",
            "nullable": true
          },
          "valuePropertyName": {
            "type": "string",
            "nullable": true
          },
          "filterParamName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AbpExtensionPropertyUiTableDto": {
        "type": "object",
        "properties": {
          "isVisible": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "AbpFeatureDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "provider": {
            "$ref": "#/components/schemas/AbpFeatureProviderDto"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "valueType": {
            "$ref": "#/components/schemas/AbpIStringValueType"
          },
          "depth": {
            "type": "integer",
            "format": "int32"
          },
          "parentName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AbpFeatureGroupDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "features": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AbpFeatureDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AbpFeatureProviderDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AbpFindTenantResultDto": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "tenantId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "normalizedName": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "AbpGetFeatureListResultDto": {
        "type": "object",
        "properties": {
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AbpFeatureGroupDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AbpGetPermissionListResultDto": {
        "type": "object",
        "properties": {
          "entityDisplayName": {
            "type": "string",
            "nullable": true
          },
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AbpPermissionGroupDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AbpIStringValueType": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "nullable": true
            },
            "nullable": true,
            "readOnly": true
          },
          "validator": {
            "$ref": "#/components/schemas/AbpIValueValidator"
          }
        },
        "additionalProperties": false
      },
      "AbpIValueValidator": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "properties": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "AbpIanaTimeZone": {
        "type": "object",
        "properties": {
          "timeZoneName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AbpIdentityRoleCreateDto": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbpIdentityRoleCreateOrUpdateDtoBase"
          }
        ],
        "additionalProperties": false
      },
      "AbpIdentityRoleCreateOrUpdateDtoBase": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "extraProperties": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true,
            "readOnly": true
          },
          "name": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string"
          },
          "isDefault": {
            "type": "boolean"
          },
          "isPublic": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "AbpIdentityRoleDto": {
        "type": "object",
        "properties": {
          "extraProperties": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true,
            "readOnly": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "isDefault": {
            "type": "boolean"
          },
          "isStatic": {
            "type": "boolean"
          },
          "isPublic": {
            "type": "boolean"
          },
          "concurrencyStamp": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AbpIdentityRoleDtoListResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AbpIdentityRoleDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AbpIdentityRoleDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AbpIdentityRoleDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "AbpIdentityRoleUpdateDto": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbpIdentityRoleCreateOrUpdateDtoBase"
          }
        ],
        "properties": {
          "concurrencyStamp": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AbpIdentityUserCreateDto": {
        "required": [
          "password"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbpIdentityUserCreateOrUpdateDtoBase"
          }
        ],
        "properties": {
          "password": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "AbpIdentityUserCreateOrUpdateDtoBase": {
        "required": [
          "email",
          "userName"
        ],
        "type": "object",
        "properties": {
          "extraProperties": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true,
            "readOnly": true
          },
          "userName": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string"
          },
          "name": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "surname": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "email": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "format": "email"
          },
          "phoneNumber": {
            "maxLength": 16,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "lockoutEnabled": {
            "type": "boolean"
          },
          "roleNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AbpIdentityUserDto": {
        "type": "object",
        "properties": {
          "extraProperties": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true,
            "readOnly": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "creationTime": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifierId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "deleterId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "tenantId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "surname": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "emailConfirmed": {
            "type": "boolean"
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "phoneNumberConfirmed": {
            "type": "boolean"
          },
          "isActive": {
            "type": "boolean"
          },
          "lockoutEnabled": {
            "type": "boolean"
          },
          "accessFailedCount": {
            "type": "integer",
            "format": "int32"
          },
          "lockoutEnd": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "concurrencyStamp": {
            "type": "string",
            "nullable": true
          },
          "entityVersion": {
            "type": "integer",
            "format": "int32"
          },
          "lastPasswordChangeTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AbpIdentityUserDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AbpIdentityUserDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "AbpIdentityUserUpdateDto": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbpIdentityUserCreateOrUpdateDtoBase"
          }
        ],
        "properties": {
          "password": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "concurrencyStamp": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AbpIdentityUserUpdateRolesDto": {
        "required": [
          "roleNames"
        ],
        "type": "object",
        "properties": {
          "roleNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "AbpInterfaceMethodApiDescriptionModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "parametersOnMethod": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AbpMethodParameterApiDescriptionModel"
            },
            "nullable": true
          },
          "returnValue": {
            "$ref": "#/components/schemas/AbpReturnValueApiDescriptionModel"
          }
        },
        "additionalProperties": false
      },
      "AbpLanguageInfo": {
        "type": "object",
        "properties": {
          "cultureName": {
            "type": "string",
            "nullable": true
          },
          "uiCultureName": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "twoLetterISOLanguageName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "AbpLocalizableStringDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "resource": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AbpMethodParameterApiDescriptionModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "typeAsString": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "typeSimple": {
            "type": "string",
            "nullable": true
          },
          "isOptional": {
            "type": "boolean"
          },
          "defaultValue": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AbpModuleApiDescriptionModel": {
        "type": "object",
        "properties": {
          "rootPath": {
            "type": "string",
            "nullable": true
          },
          "remoteServiceName": {
            "type": "string",
            "nullable": true
          },
          "controllers": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/AbpControllerApiDescriptionModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AbpModuleExtensionDto": {
        "type": "object",
        "properties": {
          "entities": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/AbpEntityExtensionDto"
            },
            "nullable": true
          },
          "configuration": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AbpMultiTenancyInfoDto": {
        "type": "object",
        "properties": {
          "isEnabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "AbpNameValue": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/StringNameValue"
          }
        ],
        "additionalProperties": false
      },
      "AbpObjectExtensionsDto": {
        "type": "object",
        "properties": {
          "modules": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/AbpModuleExtensionDto"
            },
            "nullable": true
          },
          "enums": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/AbpExtensionEnumDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AbpParameterApiDescriptionModel": {
        "type": "object",
        "properties": {
          "nameOnMethod": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "jsonName": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "typeSimple": {
            "type": "string",
            "nullable": true
          },
          "isOptional": {
            "type": "boolean"
          },
          "defaultValue": {
            "nullable": true
          },
          "constraintTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "bindingSourceId": {
            "type": "string",
            "nullable": true
          },
          "descriptorName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AbpPermissionGrantInfoDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "parentName": {
            "type": "string",
            "nullable": true
          },
          "isGranted": {
            "type": "boolean"
          },
          "allowedProviders": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "grantedProviders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AbpProviderInfoDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AbpPermissionGroupDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "displayNameKey": {
            "type": "string",
            "nullable": true
          },
          "displayNameResource": {
            "type": "string",
            "nullable": true
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AbpPermissionGrantInfoDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AbpProfileDto": {
        "type": "object",
        "properties": {
          "extraProperties": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true,
            "readOnly": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "surname": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "isExternal": {
            "type": "boolean"
          },
          "hasPassword": {
            "type": "boolean"
          },
          "concurrencyStamp": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AbpPropertyApiDescriptionModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "jsonName": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "typeSimple": {
            "type": "string",
            "nullable": true
          },
          "isRequired": {
            "type": "boolean"
          },
          "minLength": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "maxLength": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "minimum": {
            "type": "string",
            "nullable": true
          },
          "maximum": {
            "type": "string",
            "nullable": true
          },
          "regex": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AbpProviderInfoDto": {
        "type": "object",
        "properties": {
          "providerName": {
            "type": "string",
            "nullable": true
          },
          "providerKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AbpRegisterDto": {
        "required": [
          "appName",
          "emailAddress",
          "password",
          "userName"
        ],
        "type": "object",
        "properties": {
          "extraProperties": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true,
            "readOnly": true
          },
          "userName": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string"
          },
          "emailAddress": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "format": "email"
          },
          "password": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "format": "password"
          },
          "appName": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "AbpRemoteServiceErrorInfo": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "details": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "validationErrors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AbpRemoteServiceValidationErrorInfo"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AbpRemoteServiceErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/AbpRemoteServiceErrorInfo"
          }
        },
        "additionalProperties": false
      },
      "AbpRemoteServiceValidationErrorInfo": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "members": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AbpResetPasswordDto": {
        "required": [
          "password",
          "resetToken"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "resetToken": {
            "minLength": 1,
            "type": "string"
          },
          "password": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "AbpReturnValueApiDescriptionModel": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "typeSimple": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AbpSendPasswordResetCodeDto": {
        "required": [
          "appName",
          "email"
        ],
        "type": "object",
        "properties": {
          "email": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "format": "email"
          },
          "appName": {
            "minLength": 1,
            "type": "string"
          },
          "returnUrl": {
            "type": "string",
            "nullable": true
          },
          "returnUrlHash": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AbpSendTestEmailInput": {
        "required": [
          "senderEmailAddress",
          "subject",
          "targetEmailAddress"
        ],
        "type": "object",
        "properties": {
          "senderEmailAddress": {
            "minLength": 1,
            "type": "string"
          },
          "targetEmailAddress": {
            "minLength": 1,
            "type": "string"
          },
          "subject": {
            "minLength": 1,
            "type": "string"
          },
          "body": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AbpTenantCreateDto": {
        "required": [
          "adminEmailAddress",
          "adminPassword"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbpTenantCreateOrUpdateDtoBase"
          }
        ],
        "properties": {
          "adminEmailAddress": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "adminPassword": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "AbpTenantCreateOrUpdateDtoBase": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "extraProperties": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true,
            "readOnly": true
          },
          "name": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "AbpTenantDto": {
        "type": "object",
        "properties": {
          "extraProperties": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true,
            "readOnly": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "concurrencyStamp": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AbpTenantDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AbpTenantDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "AbpTenantUpdateDto": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbpTenantCreateOrUpdateDtoBase"
          }
        ],
        "properties": {
          "concurrencyStamp": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AbpTimeZone": {
        "type": "object",
        "properties": {
          "iana": {
            "$ref": "#/components/schemas/AbpIanaTimeZone"
          },
          "windows": {
            "$ref": "#/components/schemas/AbpWindowsTimeZone"
          }
        },
        "additionalProperties": false
      },
      "AbpTimingDto": {
        "type": "object",
        "properties": {
          "timeZone": {
            "$ref": "#/components/schemas/AbpTimeZone"
          }
        },
        "additionalProperties": false
      },
      "AbpTypeApiDescriptionModel": {
        "type": "object",
        "properties": {
          "baseType": {
            "type": "string",
            "nullable": true
          },
          "isEnum": {
            "type": "boolean"
          },
          "enumNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "enumValues": {
            "type": "array",
            "items": { },
            "nullable": true
          },
          "genericArguments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AbpPropertyApiDescriptionModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AbpUpdateEmailSettingsDto": {
        "required": [
          "defaultFromAddress",
          "defaultFromDisplayName"
        ],
        "type": "object",
        "properties": {
          "smtpHost": {
            "maxLength": 256,
            "type": "string",
            "nullable": true
          },
          "smtpPort": {
            "maximum": 65535,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "smtpUserName": {
            "maxLength": 1024,
            "type": "string",
            "nullable": true
          },
          "smtpPassword": {
            "maxLength": 1024,
            "type": "string",
            "format": "password",
            "nullable": true
          },
          "smtpDomain": {
            "maxLength": 1024,
            "type": "string",
            "nullable": true
          },
          "smtpEnableSsl": {
            "type": "boolean"
          },
          "smtpUseDefaultCredentials": {
            "type": "boolean"
          },
          "defaultFromAddress": {
            "maxLength": 1024,
            "minLength": 1,
            "type": "string"
          },
          "defaultFromDisplayName": {
            "maxLength": 1024,
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "AbpUpdateFeatureDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AbpUpdateFeaturesDto": {
        "type": "object",
        "properties": {
          "features": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AbpUpdateFeatureDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AbpUpdatePermissionDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "isGranted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "AbpUpdatePermissionsDto": {
        "type": "object",
        "properties": {
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AbpUpdatePermissionDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AbpUpdateProfileDto": {
        "type": "object",
        "properties": {
          "extraProperties": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true,
            "readOnly": true
          },
          "userName": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "email": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "name": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "surname": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "maxLength": 16,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "concurrencyStamp": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AbpUserData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "tenantId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "surname": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "emailConfirmed": {
            "type": "boolean"
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "phoneNumberConfirmed": {
            "type": "boolean"
          },
          "extraProperties": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "AbpUserDataListResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AbpUserData"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AbpVerifyPasswordResetTokenInput": {
        "required": [
          "resetToken"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "resetToken": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "AbpWindowsTimeZone": {
        "type": "object",
        "properties": {
          "timeZoneId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CdeAccountSettingsDto": {
        "type": "object",
        "properties": {
          "isSelfRegistrationEnabled": {
            "type": "boolean"
          },
          "enableLocalLogin": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CdeAddEnumerationCustomFieldItemDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Enumeration item name."
          }
        },
        "additionalProperties": false
      },
      "CdeAddOrUpdateEnumerationCustomFieldItemDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the enumeration item. If not set, represents a new enumeration item to be added.",
            "format": "uuid",
            "nullable": true
          },
          "name": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Enumeration item name."
          },
          "disabled": {
            "type": "boolean",
            "description": "Whether the enumeration item is disabled."
          }
        },
        "additionalProperties": false
      },
      "CdeAddOrUpdateExternalLoginProviderSettingsDto": {
        "required": [
          "authority",
          "clientId",
          "displayName",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "description": "Identity provider name. Should be unique."
          },
          "isEnabled": {
            "type": "boolean",
            "description": "Defines if provider is enabled."
          },
          "shouldLogoutFromProvider": {
            "type": "boolean",
            "description": "Defines if we should log out from external provider too when logging out from account."
          },
          "displayName": {
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "description": "External provider name used on login screen."
          },
          "authority": {
            "minLength": 1,
            "type": "string",
            "description": "External OpenIDConnect server url.",
            "format": "uri"
          },
          "clientId": {
            "minLength": 1,
            "type": "string",
            "description": "Client ID assigned to CDE authentication server on external provider."
          },
          "clientSecret": {
            "type": "string",
            "description": "Client secret assigned to CDE authentication server on external provider.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CdeAddProjectMemberDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "User ID to add as project member.",
            "format": "uuid"
          },
          "roleId": {
            "type": "string",
            "description": "ID of the project role to be assigned to  the user.\r\nIf left null, default role is assigned.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Data required to add new project member."
      },
      "CdeArchiveState": {
        "enum": [
          "not-archived",
          "archived",
          "all"
        ],
        "type": "string"
      },
      "CdeBitmapType": {
        "enum": [
          "png",
          "jpg"
        ],
        "type": "string"
      },
      "CdeBuildInfoDto": {
        "type": "object",
        "properties": {
          "major": {
            "type": "integer",
            "description": "Major application version.",
            "format": "int32"
          },
          "minor": {
            "type": "integer",
            "description": "Minor application version.",
            "format": "int32"
          },
          "patch": {
            "type": "integer",
            "description": "Patch application version.",
            "format": "int32"
          },
          "preRelease": {
            "type": "string",
            "description": "Application prerelease info.",
            "nullable": true
          },
          "buildMetadata": {
            "type": "string",
            "description": "Application build metadata.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Application build information."
      },
      "CdeCameraDto": {
        "required": [
          "direction",
          "location",
          "upVector"
        ],
        "type": "object",
        "properties": {
          "location": {
            "$ref": "#/components/schemas/CdeVectorDto"
          },
          "direction": {
            "$ref": "#/components/schemas/CdeVectorDto"
          },
          "upVector": {
            "$ref": "#/components/schemas/CdeVectorDto"
          },
          "type": {
            "type": "string",
            "description": "Type discriminator. Possible values:\n- `OrthogonalCamera`\n- `PerspectiveCamera`"
          }
        },
        "additionalProperties": false
      },
      "CdeChangeProjectOwnerDto": {
        "required": [
          "concurrencyStamp"
        ],
        "type": "object",
        "properties": {
          "ownerId": {
            "type": "string",
            "description": "User Id of the new owner of the project.",
            "format": "uuid"
          },
          "concurrencyStamp": {
            "minLength": 1,
            "type": "string",
            "description": "Concurrency stamp."
          }
        },
        "additionalProperties": false,
        "description": "Data required to change project owner."
      },
      "CdeColoringComponentsGroupDto": {
        "type": "object",
        "properties": {
          "color": {
            "title": "Color value",
            "pattern": "^#(?:[0-9a-fA-F]{2}){3,4}$",
            "type": "string",
            "description": "Color of the components."
          },
          "components": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CdeViewpointComponentDto"
            },
            "description": "Colored components.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CdeComponentsVisibilityInfoDto": {
        "type": "object",
        "properties": {
          "defaultVisibility": {
            "type": "boolean",
            "description": "If true: show all components, hide the exceptions.\r\nIf false: hide all components, show the exceptions."
          },
          "exceptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CdeViewpointComponentDto"
            },
            "description": "Components to hide/show determined by BimScanner.CDE.Viewpoints.Components.ComponentsVisibilityInfoDto.DefaultVisibility.",
            "nullable": true
          },
          "viewSetupHints": {
            "$ref": "#/components/schemas/CdeViewSetupHintsDto"
          }
        },
        "additionalProperties": false
      },
      "CdeCreateComponentsDto": {
        "type": "object",
        "properties": {
          "selection": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CdeViewpointComponentDto"
            },
            "description": "Selected components.",
            "nullable": true
          },
          "coloring": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CdeColoringComponentsGroupDto"
            },
            "description": "Colored components.",
            "nullable": true
          },
          "visibility": {
            "$ref": "#/components/schemas/CdeComponentsVisibilityInfoDto"
          }
        },
        "additionalProperties": false
      },
      "CdeCreateCustomFieldDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Name of the custom field."
          },
          "description": {
            "maxLength": 10000,
            "minLength": 0,
            "type": "string",
            "description": "Description of the custom field.",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/CdeCustomFieldType"
          },
          "enumerationItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CdeAddEnumerationCustomFieldItemDto"
            },
            "description": "Enumeration items to add to the custom field. Order of items is preserved.\r\nShould be used only when creating enumeration fields.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Data to create new custom field."
      },
      "CdeCreateLabelDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Label name."
          },
          "color": {
            "title": "Color value",
            "pattern": "^#(?:[0-9a-fA-F]{2}){3,4}$",
            "type": "string",
            "description": "Color associated with a label."
          }
        },
        "additionalProperties": false
      },
      "CdeCreateOrUpdateModelDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Model name."
          }
        },
        "additionalProperties": false
      },
      "CdeCreateOrUpdateTopicBoardPriorityDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Topic priority name."
          },
          "color": {
            "title": "Color value",
            "pattern": "^#(?:[0-9a-fA-F]{2}){3,4}$",
            "type": "string",
            "description": "Color associated with the priority."
          }
        },
        "additionalProperties": false
      },
      "CdeCreateOrUpdateTopicBoardStatusDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Topic status name."
          },
          "color": {
            "title": "Color value",
            "pattern": "^#(?:[0-9a-fA-F]{2}){3,4}$",
            "type": "string",
            "description": "Color associated with the status."
          }
        },
        "additionalProperties": false
      },
      "CdeCreateOrUpdateTopicBoardTypeDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Topic type name."
          },
          "color": {
            "title": "Color value",
            "pattern": "^#(?:[0-9a-fA-F]{2}){3,4}$",
            "type": "string",
            "description": "Color associated with the type."
          }
        },
        "additionalProperties": false
      },
      "CdeCreateProjectDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Project name."
          },
          "description": {
            "maxLength": 10000,
            "minLength": 0,
            "type": "string",
            "description": "Project description.",
            "nullable": true
          },
          "completionTime": {
            "type": "string",
            "description": "Planned project completion time.",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Data required to create a project."
      },
      "CdeCreateProjectRoleDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Role name. Should be unique in a project."
          },
          "isDefault": {
            "type": "boolean",
            "description": "A default role is automatically assigned to a new project member."
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Role permissions.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CdeCreateSnapshotDto": {
        "required": [
          "snapshotData",
          "snapshotType"
        ],
        "type": "object",
        "properties": {
          "snapshotType": {
            "$ref": "#/components/schemas/CdeSnapshotType"
          },
          "snapshotData": {
            "minLength": 1,
            "type": "string",
            "description": "Base64-encoded snapshot image."
          }
        },
        "additionalProperties": false
      },
      "CdeCreateTopicBoardDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Topic board name."
          },
          "description": {
            "maxLength": 10000,
            "minLength": 0,
            "type": "string",
            "description": "Topic board description.",
            "nullable": true
          },
          "parentGroupId": {
            "type": "string",
            "description": "Id of the parent topic boards group. If null, topic board is in hierarchy root.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Data to create topic board."
      },
      "CdeCreateTopicBoardGroupDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Group name."
          },
          "parentGroupId": {
            "type": "string",
            "description": "Id of the parent topic board group. If null, group is in hierarchy root.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Data to create topic board group."
      },
      "CdeCreateTopicCommentDto": {
        "required": [
          "comment"
        ],
        "type": "object",
        "properties": {
          "comment": {
            "maxLength": 10000,
            "minLength": 1,
            "type": "string",
            "description": "Text of comment."
          }
        },
        "additionalProperties": false
      },
      "CdeCreateTopicDto": {
        "required": [
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Topic title."
          },
          "description": {
            "maxLength": 10000,
            "minLength": 0,
            "type": "string",
            "description": "Topic description.",
            "nullable": true
          },
          "dueDate": {
            "type": "string",
            "description": "Planned date when topic will be resolved.",
            "format": "date-time",
            "nullable": true
          },
          "assignedToId": {
            "type": "string",
            "description": "Id of the user topic assigned to.",
            "format": "uuid",
            "nullable": true
          },
          "typeId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "statusId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "priorityId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "customFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CdeSetCustomFieldValueDto"
            },
            "description": "Collection of custom field values to be set.",
            "nullable": true
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Label IDs associated with a topic.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CdeCreateViewpointBitmapDto": {
        "required": [
          "bitmapData",
          "height",
          "location",
          "normal",
          "up"
        ],
        "type": "object",
        "properties": {
          "location": {
            "$ref": "#/components/schemas/CdeVectorDto"
          },
          "normal": {
            "$ref": "#/components/schemas/CdeVectorDto"
          },
          "up": {
            "$ref": "#/components/schemas/CdeVectorDto"
          },
          "height": {
            "type": "integer",
            "format": "int64"
          },
          "bitmapData": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CdeCreateViewpointDto": {
        "required": [
          "camera"
        ],
        "type": "object",
        "properties": {
          "camera": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CdeOrthogonalCameraDto"
              },
              {
                "$ref": "#/components/schemas/CdePerspectiveCameraDto"
              }
            ],
            "properties": {
              "type": {
                "type": "string",
                "description": "Type discriminator. Possible values:\n- `OrthogonalCamera`\n- `PerspectiveCamera`"
              }
            },
            "description": "Viewpoint camera data."
          },
          "snapshot": {
            "$ref": "#/components/schemas/CdeCreateSnapshotDto"
          },
          "modelReferences": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CdeViewpointModelRefDto"
            },
            "description": "Collection of references to model revisions used during viewpoint creation.",
            "nullable": true
          },
          "markers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CdeViewpointMarkerDto"
            },
            "description": "Collection of markers.",
            "nullable": true
          },
          "clippingPlanes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CdeViewpointClippingPlaneDto"
            },
            "description": "Collection of clipping planes.",
            "nullable": true
          },
          "components": {
            "$ref": "#/components/schemas/CdeCreateComponentsDto"
          },
          "bitmaps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CdeCreateViewpointBitmapDto"
            },
            "description": "Collection of bitmaps.",
            "nullable": true
          },
          "lines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CdeViewpointLineDto"
            },
            "description": "Collection of lines.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CdeCustomFieldDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "creationTime": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Type of the custom field. Valid values are `text`, `integer`, `decimal`, `date`, `bool` and `enumeration`.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Custom field name.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Custom field description.",
            "nullable": true
          },
          "archived": {
            "type": "boolean",
            "description": "Archived status."
          },
          "enumerationItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CdeEnumerationCustomFieldItemDto"
            },
            "description": "List of items for enumeration custom fields. Not used in other custom field types.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CdeCustomFieldType": {
        "enum": [
          "text",
          "integer",
          "decimal",
          "date",
          "bool",
          "enumeration"
        ],
        "type": "string"
      },
      "CdeCustomFieldValueDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Custom field id.",
            "format": "uuid"
          },
          "value": {
            "description": "Custom field value.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CdeEntityStatus": {
        "enum": [
          "Created",
          "Updated",
          "Skipped"
        ],
        "type": "string"
      },
      "CdeEnumerationCustomFieldItemDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the enumeration item.",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "Enumeration item name.",
            "nullable": true
          },
          "disabled": {
            "type": "boolean",
            "description": "Whether the enumeration item is disabled."
          }
        },
        "additionalProperties": false,
        "description": "Represents a single custom field enumeration item."
      },
      "CdeExternalLoginProviderSettingsDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identity provider ID.",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "Identity provider name.",
            "nullable": true
          },
          "isEnabled": {
            "type": "boolean",
            "description": "Defines if provider is enabled."
          },
          "shouldLogoutFromProvider": {
            "type": "boolean",
            "description": "Defines if we should log out from external provider too when logging out from account."
          },
          "displayName": {
            "type": "string",
            "description": "External provider name used on login screen.",
            "nullable": true
          },
          "authority": {
            "type": "string",
            "description": "External OpenIDConnect server url.",
            "nullable": true
          },
          "clientId": {
            "type": "string",
            "description": "Client ID assigned to CDE authentication server on external provider.",
            "nullable": true
          },
          "clientSecret": {
            "type": "string",
            "description": "Client secret assigned to CDE authentication server on external provider.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CdeJobStatus": {
        "enum": [
          "Waiting",
          "Processing",
          "Error",
          "Success"
        ],
        "type": "string"
      },
      "CdeLabelDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Label name."
          },
          "color": {
            "title": "Color value",
            "pattern": "^#(?:[0-9a-fA-F]{2}){3,4}$",
            "type": "string",
            "description": "Label color."
          },
          "isDeleted": {
            "type": "boolean",
            "description": "Indicates whether the label has been marked as deleted."
          }
        },
        "additionalProperties": false
      },
      "CdeMemberPermissionsDto": {
        "type": "object",
        "properties": {
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Collection of project permissions granted to a project member.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CdeModelConversionStatusDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Conversion job id.",
            "format": "uuid"
          },
          "modelId": {
            "type": "string",
            "description": "Id of the model being converted.",
            "format": "uuid"
          },
          "version": {
            "type": "integer",
            "description": "Model revision version being converted.",
            "format": "int32"
          },
          "status": {
            "$ref": "#/components/schemas/CdeJobStatus"
          },
          "progress": {
            "type": "number",
            "description": "Job progress in range (0..1).",
            "format": "float"
          },
          "error": {
            "type": "string",
            "description": "Conversion error details.",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "description": "Time when job has been created.",
            "format": "date-time"
          },
          "startedAt": {
            "type": "string",
            "description": "Time when job has started.",
            "format": "date-time",
            "nullable": true
          },
          "completedAt": {
            "type": "string",
            "description": "Time when job has completed.",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Model conversion job status."
      },
      "CdeModelDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Model id.",
            "format": "uuid"
          },
          "name": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Model name."
          },
          "isDeleted": {
            "type": "boolean",
            "description": "Is model deleted."
          }
        },
        "additionalProperties": false
      },
      "CdeModelDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CdeModelDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "CdeModelRevisionDto": {
        "required": [
          "modelName"
        ],
        "type": "object",
        "properties": {
          "modelId": {
            "type": "string",
            "description": "Model id.",
            "format": "uuid"
          },
          "version": {
            "type": "integer",
            "description": "Model revision version.",
            "format": "int32"
          },
          "modelName": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Model name."
          },
          "comment": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "description": "Model revision comment.",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "description": "Revision creation time.",
            "format": "date-time"
          },
          "createdBy": {
            "$ref": "#/components/schemas/CdeUserDto"
          },
          "status": {
            "$ref": "#/components/schemas/CdeJobStatus"
          }
        },
        "additionalProperties": false
      },
      "CdeModelRevisionDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CdeModelRevisionDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "CdeModifyTopicBoardCustomFieldDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Custom field id.",
            "format": "uuid"
          },
          "isEnabled": {
            "type": "boolean",
            "description": "Is custom field enabled."
          },
          "isRequired": {
            "type": "boolean",
            "description": "Is custom field required."
          },
          "defaultValue": {
            "type": "string",
            "description": "Custom field default value. Should not be empty if BimScanner.CDE.TopicBoards.CustomFields.ModifyTopicBoardCustomFieldDto.IsRequired flag is set.\r\nDefault value format depends on custom field type:\r\n- for date fields value should contain a date in RFC3339 format\r\n- for bool fields value should be either `true` or `false`\r\n- for enumeration fields default value should contain one of enumeration items id.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CdeNotificationDto": {
        "required": [
          "content",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "creationTime": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "content": { },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "minLength": 1,
            "type": "string"
          },
          "isRead": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CdeNotificationDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CdeNotificationDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "CdeOrthogonalCameraDto": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/CdeCameraDto"
          }
        ],
        "properties": {
          "aspectRatio": {
            "type": "number",
            "description": "Aspect ratio of the view (width / height).",
            "format": "double"
          },
          "viewToWorldScale": {
            "type": "number",
            "description": "View's visible vertical size in meters.",
            "format": "double"
          },
          "type": {
            "type": "string",
            "description": "Type discriminator. Possible values:\n- `OrthogonalCamera`"
          }
        },
        "additionalProperties": false
      },
      "CdePerspectiveCameraDto": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/CdeCameraDto"
          }
        ],
        "properties": {
          "aspectRatio": {
            "type": "number",
            "description": "Aspect ratio of the view (width / height).",
            "format": "double"
          },
          "fieldOfView": {
            "type": "number",
            "description": "Vertical field of view of the camera in degrees.",
            "format": "double"
          },
          "type": {
            "type": "string",
            "description": "Type discriminator. Possible values:\n- `PerspectiveCamera`"
          }
        },
        "additionalProperties": false
      },
      "CdeProjectDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "creationTime": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifierId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Project name.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Project description.",
            "nullable": true
          },
          "completionTime": {
            "type": "string",
            "description": "Planned project completion time.",
            "format": "date-time",
            "nullable": true
          },
          "concurrencyStamp": {
            "type": "string",
            "description": "Concurrency stamp.",
            "nullable": true
          },
          "owner": {
            "$ref": "#/components/schemas/CdeUserDto"
          },
          "responsible": {
            "$ref": "#/components/schemas/CdeUserDto"
          }
        },
        "additionalProperties": false,
        "description": "Project data."
      },
      "CdeProjectDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CdeProjectDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "CdeProjectImportStatus": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Project import errors.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CdeProjectMemberDto": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "string",
            "format": "uuid"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "creationTime": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "memberType": {
            "$ref": "#/components/schemas/CdeProjectMemberType"
          },
          "user": {
            "$ref": "#/components/schemas/CdeUserDto"
          },
          "role": {
            "$ref": "#/components/schemas/CdeProjectMemberRoleDto"
          }
        },
        "additionalProperties": false
      },
      "CdeProjectMemberDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CdeProjectMemberDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "CdeProjectMemberRoleDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Role id.",
            "format": "uuid"
          },
          "name": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Role name."
          }
        },
        "additionalProperties": false
      },
      "CdeProjectMemberType": {
        "enum": [
          "Member",
          "Owner"
        ],
        "type": "string"
      },
      "CdeProjectRoleDto": {
        "required": [
          "concurrencyStamp",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Role id.",
            "format": "uuid"
          },
          "name": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Role name. Should be unique in a project."
          },
          "isDefault": {
            "type": "boolean",
            "description": "A default role is automatically assigned to a new project member."
          },
          "concurrencyStamp": {
            "minLength": 1,
            "type": "string",
            "description": "Concurrency stamp."
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Role permissions.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CdePropertyImportErrors": {
        "type": "object",
        "properties": {
          "propertyName": {
            "type": "string",
            "description": "Property name. May be empty if the error is related to the entity as a whole.",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Error messages.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CdeSetCustomFieldValueDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Custom field id.",
            "format": "uuid"
          },
          "value": {
            "type": "string",
            "description": "Custom field value.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CdeSetTopicModelElementsDto": {
        "type": "object",
        "properties": {
          "modelId": {
            "type": "string",
            "description": "Model id.",
            "format": "uuid"
          },
          "modelVersion": {
            "type": "integer",
            "description": "Model version.",
            "format": "int32"
          },
          "elements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CdeTopicElementReferenceDto"
            },
            "description": "Model elements.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CdeSnapshotDto": {
        "required": [
          "snapshotType"
        ],
        "type": "object",
        "properties": {
          "snapshotType": {
            "$ref": "#/components/schemas/CdeSnapshotType"
          }
        },
        "additionalProperties": false
      },
      "CdeSnapshotType": {
        "enum": [
          "png",
          "jpg"
        ],
        "type": "string"
      },
      "CdeTopicBoardCustomFieldDetailsDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Custom field id.",
            "format": "uuid"
          },
          "isEnabled": {
            "type": "boolean",
            "description": "Is custom field enabled."
          },
          "isRequired": {
            "type": "boolean",
            "description": "Is custom field required."
          },
          "defaultValue": {
            "type": "string",
            "description": "Custom field default value. Should not be empty if BimScanner.CDE.TopicBoards.CustomFields.TopicBoardCustomFieldDto.IsRequired flag is set.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Type of the custom field. Valid values are `text`, `integer`, `decimal`, `date`, `bool` and `enumeration`.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Custom field name.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Custom field description.",
            "nullable": true
          },
          "enumerationItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CdeEnumerationCustomFieldItemDto"
            },
            "description": "List of items for enumeration custom fields. Not used in other custom field types.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CdeTopicBoardCustomFieldDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Custom field id.",
            "format": "uuid"
          },
          "isEnabled": {
            "type": "boolean",
            "description": "Is custom field enabled."
          },
          "isRequired": {
            "type": "boolean",
            "description": "Is custom field required."
          },
          "defaultValue": {
            "type": "string",
            "description": "Custom field default value. Should not be empty if BimScanner.CDE.TopicBoards.CustomFields.TopicBoardCustomFieldDto.IsRequired flag is set.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CdeTopicBoardDetailsDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Topic board id.",
            "format": "uuid"
          },
          "projectId": {
            "type": "string",
            "description": "Parent project id.",
            "format": "uuid"
          },
          "parentGroupId": {
            "type": "string",
            "description": "Id of the parent topic boards group.",
            "format": "uuid",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Topic board name.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Topic board description.",
            "nullable": true
          },
          "customFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CdeTopicBoardCustomFieldDetailsDto"
            },
            "description": "Collection of board custom fields.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Topic board details."
      },
      "CdeTopicBoardDto": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/CdeTopicBoardItemDto"
          }
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Topic board id.",
            "format": "uuid"
          },
          "projectId": {
            "type": "string",
            "description": "Parent project id.",
            "format": "uuid"
          },
          "parentGroupId": {
            "type": "string",
            "description": "Id of the parent topic boards group.",
            "format": "uuid",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Topic board name.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Topic board description.",
            "nullable": true
          },
          "customFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CdeTopicBoardCustomFieldDto"
            },
            "description": "Collection of board custom fields.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Type discriminator. Possible values:\n- `TopicBoard`"
          }
        },
        "additionalProperties": false,
        "description": "Topic board."
      },
      "CdeTopicBoardGroupDto": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/CdeTopicBoardItemDto"
          }
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "projectId": {
            "type": "string",
            "format": "uuid"
          },
          "parentGroupId": {
            "type": "string",
            "description": "Id of the parent topic boards group.",
            "format": "uuid",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Type discriminator. Possible values:\n- `TopicBoardGroup`"
          }
        },
        "additionalProperties": false,
        "description": "Topic boards group."
      },
      "CdeTopicBoardGroupPopulatedDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "projectId": {
            "type": "string",
            "format": "uuid"
          },
          "parentGroupId": {
            "type": "string",
            "description": "Id of the parent topic boards group.",
            "format": "uuid",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/CdeTopicBoardDto"
                },
                {
                  "$ref": "#/components/schemas/CdeTopicBoardGroupDto"
                }
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Type discriminator. Possible values:\n- `TopicBoard`\n- `TopicBoardGroup`"
                }
              }
            },
            "description": "Collection of topic boards group children: another groups and topic boards.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Topic boards group including children."
      },
      "CdeTopicBoardItemDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type discriminator. Possible values:\n- `TopicBoard`\n- `TopicBoardGroup`"
          }
        },
        "additionalProperties": false
      },
      "CdeTopicBoardPriorityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "Priority name.",
            "nullable": true
          },
          "color": {
            "title": "Color value",
            "pattern": "^#(?:[0-9a-fA-F]{2}){3,4}$",
            "type": "string",
            "description": "Associated color."
          }
        },
        "additionalProperties": false
      },
      "CdeTopicBoardStatusDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "Status name.",
            "nullable": true
          },
          "color": {
            "title": "Color value",
            "pattern": "^#(?:[0-9a-fA-F]{2}){3,4}$",
            "type": "string",
            "description": "Associated color."
          }
        },
        "additionalProperties": false,
        "description": "Topic status."
      },
      "CdeTopicBoardTypeDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "Type name.",
            "nullable": true
          },
          "color": {
            "title": "Color value",
            "pattern": "^#(?:[0-9a-fA-F]{2}){3,4}$",
            "type": "string",
            "description": "Associated color."
          }
        },
        "additionalProperties": false
      },
      "CdeTopicCommentDto": {
        "required": [
          "comment",
          "topicId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "topicId": {
            "type": "string",
            "description": "Topic ID.",
            "format": "uuid"
          },
          "creationTime": {
            "type": "string",
            "description": "Creation time.",
            "format": "date-time"
          },
          "creator": {
            "$ref": "#/components/schemas/CdeUserDto"
          },
          "lastModificationTime": {
            "type": "string",
            "description": "Last modification time.",
            "format": "date-time",
            "nullable": true
          },
          "lastModifier": {
            "$ref": "#/components/schemas/CdeUserDto"
          },
          "comment": {
            "maxLength": 10000,
            "minLength": 1,
            "type": "string",
            "description": "Text of comment."
          }
        },
        "additionalProperties": false
      },
      "CdeTopicCommentEventDto": {
        "type": "object",
        "properties": {
          "commentId": {
            "type": "string",
            "description": "Comment ID.",
            "format": "uuid"
          },
          "topicId": {
            "type": "string",
            "description": "Topic ID.",
            "format": "uuid"
          },
          "creationTime": {
            "type": "string",
            "description": "Event creation time.",
            "format": "date-time"
          },
          "author": {
            "$ref": "#/components/schemas/CdeUserDto"
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CdeTopicCommentEventItemDto"
            },
            "description": "Collection of comment events.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Comment event data."
      },
      "CdeTopicCommentEventDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CdeTopicCommentEventDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "CdeTopicCommentEventItemDto": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "minLength": 1,
            "type": "string",
            "description": "Event type."
          },
          "value": {
            "description": "Value associated with the event.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Comment event data."
      },
      "CdeTopicDetailsDto": {
        "required": [
          "serverAssignedId",
          "title"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Topic id.",
            "format": "uuid"
          },
          "serverAssignedId": {
            "minLength": 1,
            "type": "string",
            "description": "Human-readable topic id."
          },
          "creationTime": {
            "type": "string",
            "description": "Creation time.",
            "format": "date-time"
          },
          "creator": {
            "$ref": "#/components/schemas/CdeUserDto"
          },
          "lastModificationTime": {
            "type": "string",
            "description": "Time of last modification.",
            "format": "date-time",
            "nullable": true
          },
          "lastModifier": {
            "$ref": "#/components/schemas/CdeUserDto"
          },
          "title": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Topic title."
          },
          "description": {
            "maxLength": 10000,
            "minLength": 0,
            "type": "string",
            "description": "Topic description.",
            "nullable": true
          },
          "dueDate": {
            "type": "string",
            "description": "Planned topic completion time.",
            "format": "date-time",
            "nullable": true
          },
          "assignedTo": {
            "$ref": "#/components/schemas/CdeUserDto"
          },
          "topicBoardId": {
            "type": "string",
            "description": "Id of the parent topic board.",
            "format": "uuid"
          },
          "concurrencyStamp": {
            "type": "string",
            "description": "Concurrency stamp.",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/CdeTopicBoardTypeDto"
          },
          "status": {
            "$ref": "#/components/schemas/CdeTopicBoardStatusDto"
          },
          "priority": {
            "$ref": "#/components/schemas/CdeTopicBoardPriorityDto"
          },
          "customFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CdeCustomFieldValueDto"
            },
            "description": "Collection of custom field values.",
            "nullable": true
          },
          "labels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CdeLabelDto"
            },
            "description": "Labels assigned to the topic.",
            "nullable": true
          },
          "viewpoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CdeTopicViewpointDto"
            },
            "description": "Viewpoints related to the topic.",
            "nullable": true
          },
          "models": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CdeTopicModelReferenceDto"
            },
            "description": "Models related to the topic.",
            "nullable": true
          },
          "numberOfComments": {
            "type": "integer",
            "description": "Number of topic comments.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CdeTopicDetailsDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CdeTopicDetailsDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "CdeTopicElementReferenceDto": {
        "required": [
          "ifcGuid"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Element name.",
            "nullable": true
          },
          "ifcGuid": {
            "maxLength": 22,
            "minLength": 22,
            "type": "string",
            "description": "Element IFC GUID."
          }
        },
        "additionalProperties": false
      },
      "CdeTopicEventDto": {
        "type": "object",
        "properties": {
          "topicId": {
            "type": "string",
            "description": "Topic id.",
            "format": "uuid"
          },
          "creationTime": {
            "type": "string",
            "description": "Event creation time.",
            "format": "date-time"
          },
          "author": {
            "$ref": "#/components/schemas/CdeUserDto"
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CdeTopicEventItemDto"
            },
            "description": "Collection of topic events.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Topic event data."
      },
      "CdeTopicEventDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CdeTopicEventDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "CdeTopicEventItemDto": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "minLength": 1,
            "type": "string",
            "description": "Event type."
          },
          "value": {
            "description": "Value associated with the event.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Topic change data."
      },
      "CdeTopicExportFormat": {
        "enum": [
          "bcf21",
          "bcf30"
        ],
        "type": "string"
      },
      "CdeTopicImportStatus": {
        "type": "object",
        "properties": {
          "topicId": {
            "type": "string",
            "description": "Topic id.",
            "format": "uuid"
          },
          "status": {
            "$ref": "#/components/schemas/CdeEntityStatus"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CdePropertyImportErrors"
            },
            "description": "Topic import errors.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CdeTopicModelElementsDto": {
        "required": [
          "modelName"
        ],
        "type": "object",
        "properties": {
          "modelId": {
            "type": "string",
            "description": "Model id.",
            "format": "uuid"
          },
          "modelVersion": {
            "type": "integer",
            "description": "Model version.",
            "format": "int32"
          },
          "modelName": {
            "minLength": 1,
            "type": "string",
            "description": "Model name."
          },
          "elements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CdeTopicElementReferenceDto"
            },
            "description": "Model elements.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CdeTopicModelReferenceDto": {
        "required": [
          "modelName"
        ],
        "type": "object",
        "properties": {
          "modelId": {
            "type": "string",
            "description": "Model id.",
            "format": "uuid"
          },
          "modelVersion": {
            "type": "integer",
            "description": "Model version.",
            "format": "int32"
          },
          "modelName": {
            "minLength": 1,
            "type": "string",
            "description": "Model name."
          }
        },
        "additionalProperties": false
      },
      "CdeTopicViewpointDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Viewpoint id.",
            "format": "uuid"
          },
          "hasSnapshot": {
            "type": "boolean",
            "description": "Does the viewpoint has a snapshot image."
          },
          "markers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CdeViewpointMarkerDto"
            },
            "description": "Collection of markers.",
            "nullable": true
          },
          "models": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CdeViewpointModelRefDto"
            },
            "description": "Collection of related model revisions.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CdeTopicsExportOptionsDto": {
        "type": "object",
        "properties": {
          "format": {
            "$ref": "#/components/schemas/CdeTopicExportFormat"
          },
          "exportByDefault": {
            "type": "boolean",
            "description": "If true, exports all topics that pass specified query filter,\r\nexcept those whose ids are listed in BimScanner.CDE.Topics.Export.TopicsExportOptionsDto.ExceptTopics collection.\r\nIf false, only topics listed in BimScanner.CDE.Topics.Export.TopicsExportOptionsDto.ExceptTopics are exported."
          },
          "exceptTopics": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Collection of topic ids to be either excluded or included into export\r\ndepending on BimScanner.CDE.Topics.Export.TopicsExportOptionsDto.ExportByDefault flag.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CdeTopicsImportSummaryDto": {
        "type": "object",
        "properties": {
          "bcfVersion": {
            "type": "string",
            "description": "Version of imported file.",
            "nullable": true
          },
          "project": {
            "$ref": "#/components/schemas/CdeProjectImportStatus"
          },
          "topics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CdeTopicImportStatus"
            },
            "description": "Status of topics.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CdeUpdateAccountSettingsDto": {
        "type": "object",
        "properties": {
          "isSelfRegistrationEnabled": {
            "type": "boolean"
          },
          "enableLocalLogin": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CdeUpdateCustomFieldDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Name of the custom field."
          },
          "description": {
            "maxLength": 10000,
            "minLength": 0,
            "type": "string",
            "description": "Description of the custom field.",
            "nullable": true
          },
          "archived": {
            "type": "boolean",
            "description": "Archived status."
          },
          "enumerationItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CdeAddOrUpdateEnumerationCustomFieldItemDto"
            },
            "description": "Enumeration items to add or update in the custom field.\r\nOrder of items is preserved. Items can not be removed from the collection,\r\ninformation about all existing items should be present.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Data to edit existing custom field."
      },
      "CdeUpdateLabelDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Label name."
          },
          "color": {
            "title": "Color value",
            "pattern": "^#(?:[0-9a-fA-F]{2}){3,4}$",
            "type": "string",
            "description": "Label color."
          }
        },
        "additionalProperties": false
      },
      "CdeUpdateModelRevisionDto": {
        "type": "object",
        "properties": {
          "comment": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "description": "Model revision comment.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Data to update the model revision."
      },
      "CdeUpdateProjectDto": {
        "required": [
          "concurrencyStamp",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Project name."
          },
          "description": {
            "maxLength": 10000,
            "minLength": 0,
            "type": "string",
            "description": "Project description.",
            "nullable": true
          },
          "responsibleId": {
            "type": "string",
            "description": "User Id of the person responsible for the project.",
            "format": "uuid"
          },
          "completionTime": {
            "type": "string",
            "description": "Planned project completion time.",
            "format": "date-time",
            "nullable": true
          },
          "concurrencyStamp": {
            "minLength": 1,
            "type": "string",
            "description": "Concurrency stamp."
          }
        },
        "additionalProperties": false,
        "description": "Data required to update a project."
      },
      "CdeUpdateProjectMemberDto": {
        "type": "object",
        "properties": {
          "roleId": {
            "type": "string",
            "description": "Id of the project role to be assigned.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CdeUpdateProjectRoleDto": {
        "required": [
          "concurrencyStamp",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Role name. Should be unique in a project."
          },
          "isDefault": {
            "type": "boolean",
            "description": "A default role is automatically assigned to a new project member."
          },
          "concurrencyStamp": {
            "minLength": 1,
            "type": "string",
            "description": "Concurrency stamp."
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Role permissions.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CdeUpdateTopicBoardCustomFieldsDto": {
        "type": "object",
        "properties": {
          "customFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CdeModifyTopicBoardCustomFieldDto"
            },
            "description": "New set of custom fields on the topic board. Order of the fields in collection is maintained.\r\nAdded items would be added on board, removed items would be deleted.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CdeUpdateTopicBoardDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Topic board name."
          },
          "description": {
            "maxLength": 10000,
            "minLength": 0,
            "type": "string",
            "description": "Topic board description.",
            "nullable": true
          },
          "parentGroupId": {
            "type": "string",
            "description": "Id of the parent topic boards group.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Data to update topic board."
      },
      "CdeUpdateTopicBoardGroupDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Topic boards group name."
          },
          "parentGroupId": {
            "type": "string",
            "description": "Id of the parent topic boards group.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Data to update topic boards group."
      },
      "CdeUpdateTopicCommentDto": {
        "required": [
          "comment"
        ],
        "type": "object",
        "properties": {
          "comment": {
            "maxLength": 10000,
            "minLength": 1,
            "type": "string",
            "description": "Text of comment."
          }
        },
        "additionalProperties": false
      },
      "CdeUpdateTopicDto": {
        "required": [
          "concurrencyStamp",
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Topic title."
          },
          "description": {
            "maxLength": 10000,
            "minLength": 0,
            "type": "string",
            "description": "Topic description.",
            "nullable": true
          },
          "dueDate": {
            "type": "string",
            "description": "Planned date when topic will be resolved.",
            "format": "date-time",
            "nullable": true
          },
          "assignedToId": {
            "type": "string",
            "description": "Id of the user topic assigned to.",
            "format": "uuid",
            "nullable": true
          },
          "concurrencyStamp": {
            "minLength": 1,
            "type": "string",
            "description": "Concurrency stamp."
          },
          "typeId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "statusId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "priorityId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "customFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CdeSetCustomFieldValueDto"
            },
            "description": "Collection of custom field values to be set.",
            "nullable": true
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Label IDs associated with a topic.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CdeUpdateViewpointModelsDto": {
        "type": "object",
        "properties": {
          "modelReferences": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CdeViewpointModelRefDto"
            },
            "description": "Collection of references to model revisions used during viewpoint creation.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CdeUserDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "userName": {
            "type": "string",
            "description": "Login of the user.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "surname": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "creationTime": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Slim version of user info."
      },
      "CdeUserDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CdeUserDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "CdeVectorDto": {
        "type": "object",
        "properties": {
          "x": {
            "type": "number",
            "format": "double"
          },
          "y": {
            "type": "number",
            "format": "double"
          },
          "z": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "CdeViewSetupHintsDto": {
        "type": "object",
        "properties": {
          "spacesVisible": {
            "type": "boolean",
            "description": "Visibility of spaces."
          },
          "spaceBoundariesVisible": {
            "type": "boolean",
            "description": "Visibility of space boundaries."
          },
          "openingsVisible": {
            "type": "boolean",
            "description": "Visibility of openings."
          }
        },
        "additionalProperties": false
      },
      "CdeViewpointBitmapDto": {
        "required": [
          "bitmapType",
          "height",
          "location",
          "normal",
          "up"
        ],
        "type": "object",
        "properties": {
          "bitmapType": {
            "$ref": "#/components/schemas/CdeBitmapType"
          },
          "location": {
            "$ref": "#/components/schemas/CdeVectorDto"
          },
          "normal": {
            "$ref": "#/components/schemas/CdeVectorDto"
          },
          "up": {
            "$ref": "#/components/schemas/CdeVectorDto"
          },
          "height": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "CdeViewpointClippingPlaneDto": {
        "required": [
          "direction",
          "location"
        ],
        "type": "object",
        "properties": {
          "location": {
            "$ref": "#/components/schemas/CdeVectorDto"
          },
          "direction": {
            "$ref": "#/components/schemas/CdeVectorDto"
          }
        },
        "additionalProperties": false
      },
      "CdeViewpointComponentDto": {
        "type": "object",
        "properties": {
          "ifcGuid": {
            "type": "string",
            "description": "IFC guid of the component. Optional, if BimScanner.CDE.Viewpoints.Components.ViewpointComponentDto.AuthoringToolId is provided.",
            "nullable": true
          },
          "originatingSystem": {
            "type": "string",
            "description": "Originating system of the component.",
            "nullable": true
          },
          "authoringToolId": {
            "type": "string",
            "description": "Internal id for the authoring tool of the component.\r\nOptional, if BimScanner.CDE.Viewpoints.Components.ViewpointComponentDto.IfcGuid is provided.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CdeViewpointDto": {
        "required": [
          "camera"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "creationTime": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "camera": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CdeOrthogonalCameraDto"
              },
              {
                "$ref": "#/components/schemas/CdePerspectiveCameraDto"
              }
            ],
            "properties": {
              "type": {
                "type": "string",
                "description": "Type discriminator. Possible values:\n- `OrthogonalCamera`\n- `PerspectiveCamera`"
              }
            },
            "description": "Camera data."
          },
          "snapshot": {
            "$ref": "#/components/schemas/CdeSnapshotDto"
          },
          "modelReferences": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CdeViewpointModelRefDto"
            },
            "description": "Collection of references to model revisions used during viewpoint creation.",
            "nullable": true
          },
          "markers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CdeViewpointMarkerDto"
            },
            "description": "Collection of markers.",
            "nullable": true
          },
          "bitmaps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CdeViewpointBitmapDto"
            },
            "description": "Collection of bitmaps.",
            "nullable": true
          },
          "lines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CdeViewpointLineDto"
            },
            "description": "Collection of lines.",
            "nullable": true
          },
          "clippingPlanes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CdeViewpointClippingPlaneDto"
            },
            "description": "Collection of clipping planes.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CdeViewpointLineDto": {
        "required": [
          "endPoint",
          "startPoint"
        ],
        "type": "object",
        "properties": {
          "startPoint": {
            "$ref": "#/components/schemas/CdeVectorDto"
          },
          "endPoint": {
            "$ref": "#/components/schemas/CdeVectorDto"
          }
        },
        "additionalProperties": false
      },
      "CdeViewpointMarkerDto": {
        "required": [
          "location"
        ],
        "type": "object",
        "properties": {
          "location": {
            "$ref": "#/components/schemas/CdeVectorDto"
          }
        },
        "additionalProperties": false
      },
      "CdeViewpointModelRefDto": {
        "type": "object",
        "properties": {
          "modelId": {
            "type": "string",
            "description": "Model id.",
            "format": "uuid"
          },
          "modelVersion": {
            "type": "integer",
            "description": "Model revision version.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "HttpValidationProblemDetails": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProblemDetails"
          }
        ],
        "properties": {
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "StringNameValue": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "oauth2": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://cde-auth.test.briodev.ru/connect/authorize",
            "tokenUrl": "https://cde-auth.test.briodev.ru/connect/token",
            "scopes": {
              "CDE": "CDE API"
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "oauth2": [ ]
    }
  ]
}